<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
	<Type Name="std::string">
		<AlternativeType Name="std::__cxx11::basic_string&lt;*&gt;"/>
		<AlternativeType Name="Jde::str"/>
		<DisplayString>{{s={_M_dataplus._M_p,s}}}</DisplayString>
		<Expand>
				<Item Name="size">_M_string_length</Item>
				<Item Name="string">_M_dataplus._M_p,s</Item>
		</Expand>
	</Type>	
	<Type Name="std::filesystem::__cxx11::path">
		<DisplayString>{_M_pathname._M_dataplus._M_p}</DisplayString>
	</Type>
	<Type Name="std::filesystem::path">
    <DisplayString>{_M_pathname._M_dataplus}</DisplayString>
  </Type>
	<Type Name="std::optional&lt;*&gt;">
		<DisplayString Condition="_M_payload._M_engaged == false">null</DisplayString>
		<DisplayString>{_M_payload._M_payload._M_value}</DisplayString>
		<Expand>
				<ExpandedItem Condition="_M_payload._M_engaged == true">_M_payload._M_payload._M_value</ExpandedItem>
		</Expand>
	</Type>	
	<Type Name="std::map&lt;*&gt;">
		<AlternativeType Name="std::multimap&lt;*&gt;"/>
		<DisplayString>{{ size={_M_t._M_impl._M_node_count} }}</DisplayString>
		<Expand>
				<Item Name="size">_M_t._M_impl._M_node_count</Item>
				<TreeItems>
						<Size>_M_t._M_impl._M_node_count</Size>
						<HeadPointer>(std::map&lt;$T1,$T2,$T3,$T4&gt;::_Rep_type::_Link_type)_M_t._M_impl._M_header._M_parent</HeadPointer>
						<LeftPointer>_M_left</LeftPointer>
						<RightPointer>_M_right</RightPointer>
						<ValueNode>(std::pair&lt;$T1,$T2&gt;)_M_storage</ValueNode>
				</TreeItems>
		</Expand>
	</Type>
 <Type Name="std::unique_ptr&lt;*&gt;">
		<DisplayString Condition="_M_t._M_t.std::_Head_base&lt;0, $T1*, false&gt;::_M_head_impl == 0">{{nullptr}}</DisplayString>
		<DisplayString>{*std::_Head_base&lt;0, $T1*, false&gt;::_M_head(_M_t._M_t)}</DisplayString>
		<Expand>
				<ExpandedItem>*std::_Head_base&lt;0, $T1*, false&gt;::_M_head(_M_t._M_t)</ExpandedItem>
		</Expand>
	</Type>
	<Type Name="std::vector&lt;*&gt;">
    <DisplayString>{{size={_M_impl._M_finish - _M_impl._M_start}}}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_M_impl._M_finish - _M_impl._M_start</Item>
      <Item Name="[capacity]" ExcludeView="simple">_M_impl._M_end_of_storage - _M_impl._M_start</Item>
      <ArrayItems>
        <Size>_M_impl._M_finish - _M_impl._M_start</Size>
        <ValuePointer>_M_impl._M_start</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
	<Type Name="std::__debug::vector&lt;*&gt;">
    <DisplayString>{{size={_M_impl._M_finish - _M_impl._M_start}}}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_M_impl._M_finish - _M_impl._M_start</Item>
      <Item Name="[capacity]" ExcludeView="simple">_M_impl._M_end_of_storage - _M_impl._M_start</Item>
      <ArrayItems>
        <Size>_M_impl._M_finish - _M_impl._M_start</Size>
        <ValuePointer>_M_impl._M_start</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>	
</AutoVisualizer>