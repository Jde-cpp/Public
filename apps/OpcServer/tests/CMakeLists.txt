cmake_minimum_required( VERSION ${MIN_REQ_CMAKE_VERSION} )
include( ../../../build/functions.cmake )
project( Jde.OpcServer.Tests VERSION ${JDE_VERSION} LANGUAGES CXX )
include( ../../../build/dependencies.cmake )

find_package( open62541 REQUIRED )
set( open62541Dir ${open62541_DIR}/../../.. )
cmake_path( ABSOLUTE_PATH open62541Dir NORMALIZE OUTPUT_VARIABLE open62541Dir )
link_directories( ${open62541Dir}/lib )
#add_definitions( -DUA_ENABLE_ENCRYPTION )
if( WIN32 )
	add_definitions( -DZLIB_USE_STATIC_LIBS )
	set( ZLIB_ROOT ${LIB_DIR}/zlib )
endif()
find_package( ZLIB REQUIRED )

set( targetName Jde.Opc.Server.Tests )
add_executable( ${targetName} )
compileOptions( ${targetName} )
if( WIN32 )
	set( CMAKE_SHARED_LINKER_FLAGS_DEBUG "/debug /INCREMENTAL:NO" )
	set_target_properties( ${targetName} PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/$<CONFIG>" )
endif()

file( GLOB sources *.cpp **/*.cpp )
if( WIN32 )
	list( APPEND sources Opc.Server.Tests.rc )
endif()
file( GLOB headers *.h **/*.h )
target_sources( ${targetName} PRIVATE ${sources} ${headers} )

add_subdirectory( ../../AppServer/src ../../../apps/AppServer/lib )

find_package( GTest REQUIRED )
include_directories( ${open62541Dir}include )
target_link_libraries( ${targetName} GTest::gtest )
target_link_libraries( ${targetName} Boost::json )
#target_link_libraries( ${targetName} Jde Jde.QL Jde.App.Shared Jde.App.Client Jde.Web.Client Jde.Web.Server Jde.App.ServerLib Jde.Opc Jde.Opc.GatewayLib Jde.Opc.ServerLib )
target_link_libraries( ${targetName} Jde.App.ServerLib Jde.Opc.ServerLib )
#target_link_libraries( ${targetName} protobuf::libprotobuf )
if( WIN32 )
	target_link_libraries( ${targetName} ZLIB::ZLIB )
	target_link_libraries( ${targetName} Iphlpapi.lib )
else()
#	target_link_libraries( ${targetName} OpenSSL::SSL )
#	target_link_libraries( ${targetName} stdc++exp )#for stacktrace
endif()

add_custom_command( TARGET ${targetName} POST_BUILD COMMAND ${CMAKE_COMMAND} -E create_symlink "$ENV{JDE_BASH}/Public/libs/db/config/common-meta.libsonnet" "$ENV{JDE_BASH}/Public/apps/OpcServer/config/common-meta.libsonnet" COMMENT "mklink common-meta.libsonnet" )
if( WIN32 )
	set_target_properties( ${targetName} PROPERTIES VS_DEBUGGER_COMMAND_ARGUMENTS "-tests -settings=${CMAKE_CURRENT_SOURCE_DIR}/config/Opc.Server.Tests.jsonnet" )
	copyCommonDlls()
	add_custom_command( TARGET ${targetName} POST_BUILD COMMAND ${CMAKE_COMMAND} -E copy_if_different "${LIB_DIR}/libxml2/bin/libxml2d.dll" $<TARGET_FILE_DIR:${targetName}>  COMMENT "libxml2d.dll" )
endif()
target_precompile_headers( ${targetName} PRIVATE
	pc.h
)