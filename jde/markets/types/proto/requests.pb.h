// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: requests.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_requests_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_requests_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ib.pb.h"
#include "watch.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_requests_2eproto JDE_MARKETS_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct JDE_MARKETS_EXPORT TableStruct_requests_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[23]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_requests_2eproto;
namespace Jde {
namespace Markets {
namespace Proto {
namespace Requests {
class Custom;
struct CustomDefaultTypeInternal;
JDE_MARKETS_EXPORT extern CustomDefaultTypeInternal _Custom_default_instance_;
class EditWatchListRequest;
struct EditWatchListRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern EditWatchListRequestDefaultTypeInternal _EditWatchListRequest_default_instance_;
class FlexExecutions;
struct FlexExecutionsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern FlexExecutionsDefaultTypeInternal _FlexExecutions_default_instance_;
class GenericRequests;
struct GenericRequestsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern GenericRequestsDefaultTypeInternal _GenericRequests_default_instance_;
class HistoricalNewsRequest;
struct HistoricalNewsRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern HistoricalNewsRequestDefaultTypeInternal _HistoricalNewsRequest_default_instance_;
class ImpliedPrice;
struct ImpliedPriceDefaultTypeInternal;
JDE_MARKETS_EXPORT extern ImpliedPriceDefaultTypeInternal _ImpliedPrice_default_instance_;
class ImpliedPriceRequest;
struct ImpliedPriceRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern ImpliedPriceRequestDefaultTypeInternal _ImpliedPriceRequest_default_instance_;
class ImpliedVolatility;
struct ImpliedVolatilityDefaultTypeInternal;
JDE_MARKETS_EXPORT extern ImpliedVolatilityDefaultTypeInternal _ImpliedVolatility_default_instance_;
class ImpliedVolatilityRequest;
struct ImpliedVolatilityRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern ImpliedVolatilityRequestDefaultTypeInternal _ImpliedVolatilityRequest_default_instance_;
class NewsArticleRequest;
struct NewsArticleRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern NewsArticleRequestDefaultTypeInternal _NewsArticleRequest_default_instance_;
class PlaceOrder;
struct PlaceOrderDefaultTypeInternal;
JDE_MARKETS_EXPORT extern PlaceOrderDefaultTypeInternal _PlaceOrder_default_instance_;
class RequestAccountUpdates;
struct RequestAccountUpdatesDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestAccountUpdatesDefaultTypeInternal _RequestAccountUpdates_default_instance_;
class RequestAccountUpdatesMulti;
struct RequestAccountUpdatesMultiDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestAccountUpdatesMultiDefaultTypeInternal _RequestAccountUpdatesMulti_default_instance_;
class RequestContractDetails;
struct RequestContractDetailsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestContractDetailsDefaultTypeInternal _RequestContractDetails_default_instance_;
class RequestExecutions;
struct RequestExecutionsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestExecutionsDefaultTypeInternal _RequestExecutions_default_instance_;
class RequestHistoricalData;
struct RequestHistoricalDataDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestHistoricalDataDefaultTypeInternal _RequestHistoricalData_default_instance_;
class RequestMrkDataSmart;
struct RequestMrkDataSmartDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestMrkDataSmartDefaultTypeInternal _RequestMrkDataSmart_default_instance_;
class RequestOptions;
struct RequestOptionsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestOptionsDefaultTypeInternal _RequestOptions_default_instance_;
class RequestPositions;
struct RequestPositionsDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestPositionsDefaultTypeInternal _RequestPositions_default_instance_;
class RequestTransmission;
struct RequestTransmissionDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestTransmissionDefaultTypeInternal _RequestTransmission_default_instance_;
class RequestUnion;
struct RequestUnionDefaultTypeInternal;
JDE_MARKETS_EXPORT extern RequestUnionDefaultTypeInternal _RequestUnion_default_instance_;
class StdDevRequest;
struct StdDevRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern StdDevRequestDefaultTypeInternal _StdDevRequest_default_instance_;
class StringRequest;
struct StringRequestDefaultTypeInternal;
JDE_MARKETS_EXPORT extern StringRequestDefaultTypeInternal _StringRequest_default_instance_;
}  // namespace Requests
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::Custom* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::Custom>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::EditWatchListRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::EditWatchListRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::FlexExecutions* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::FlexExecutions>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::GenericRequests* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::GenericRequests>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::HistoricalNewsRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::ImpliedPrice* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::ImpliedPrice>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::ImpliedPriceRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::ImpliedVolatility* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::ImpliedVolatility>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::NewsArticleRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::NewsArticleRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::PlaceOrder* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::PlaceOrder>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestAccountUpdates* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestAccountUpdates>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestContractDetails* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestContractDetails>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestExecutions* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestExecutions>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestHistoricalData* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestHistoricalData>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestMrkDataSmart>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestOptions* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestOptions>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestPositions* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestPositions>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestTransmission* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestTransmission>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::RequestUnion* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::RequestUnion>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::StdDevRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::StdDevRequest>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Requests::StringRequest* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Requests::StringRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Jde {
namespace Markets {
namespace Proto {
namespace Requests {

enum ETickList : int {
  TickListNone = 0,
  OptionVolume = 100,
  OptionOpenInterest = 101,
  HistoricalVolatility_ = 104,
  AverageOptVolume = 105,
  ImpliedVolatility_ = 106,
  Climpvlt = 107,
  Bondanalyticdata = 125,
  MiscStats = 165,
  CScreen = 166,
  CreditmanMarkPrice = 221,
  Auction = 225,
  PlPrice = 232,
  RTVolume = 233,
  Inventory = 236,
  Fundamentals = 258,
  Ivclose = 291,
  WideNews = 292,
  TradeCount = 293,
  TradeRate = 294,
  VolumeRate = 295,
  LastRTHTrade = 318,
  ParticipationMonitor = 370,
  RTTrdVolume = 375,
  CttTickTag = 377,
  IBRate = 381,
  RfqTickRespTag = 384,
  DMM = 387,
  IssuerFundamentals = 388,
  IBWarrantImpVolCompeteTick = 391,
  IndexCapabilities = 405,
  FuturesMargins = 407,
  rthistvol = 411,
  MonitorTickTag = 439,
  Dividends = 456,
  RTCLOSE = 459,
  BondFactorMultiplier = 460,
  FeeandRebateRate = 499,
  midptiv = 506,
  hvolrt10perUnderlying = 511,
  hvolrt30perUnderlying = 512,
  hvolrt50perUnderlying = 513,
  hvolrt75perUnderlying = 514,
  hvolrt100perUnderlying = 515,
  hvolrt150perUnderlying = 516,
  hvolrt200perUnderlying = 517,
  fzmidptiv = 521,
  vsiv = 545,
  EtfNavBidAsknavbidask = 576,
  EtfNavLastnavlast = 577,
  EtfNavClosenavclose = 578,
  AverageOpeningVol = 584,
  AverageClosingVol = 585,
  PlPriceDelayed = 587,
  FuturesOpenInterest = 588,
  EMAN = 608,
  EtfNavMischightLow = 614,
  CreditmanSlowMarkPrice = 619,
  EtfFrozenNavLastfznavlast = 623,
  MonetaryClosePrice = 645,
  Avgv1Min = 658,
  ETickList_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ETickList_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_MARKETS_EXPORT bool ETickList_IsValid(int value);
constexpr ETickList ETickList_MIN = TickListNone;
constexpr ETickList ETickList_MAX = Avgv1Min;
constexpr int ETickList_ARRAYSIZE = ETickList_MAX + 1;

JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ETickList_descriptor();
template<typename T>
inline const std::string& ETickList_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ETickList>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ETickList_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ETickList_descriptor(), enum_t_value);
}
inline bool ETickList_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ETickList* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ETickList>(
    ETickList_descriptor(), name, value);
}
enum Display : int {
  Trades = 0,
  Midpoint = 1,
  Bid = 2,
  Ask = 3,
  BidAsk = 4,
  HistoricalVolatility = 5,
  OptionImpliedVolatility = 6,
  FeeRate = 7,
  RebateRate = 8,
  Display_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  Display_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_MARKETS_EXPORT bool Display_IsValid(int value);
constexpr Display Display_MIN = Trades;
constexpr Display Display_MAX = RebateRate;
constexpr int Display_ARRAYSIZE = Display_MAX + 1;

JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Display_descriptor();
template<typename T>
inline const std::string& Display_Name(T enum_t_value) {
  static_assert(::std::is_same<T, Display>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function Display_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    Display_descriptor(), enum_t_value);
}
inline bool Display_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, Display* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<Display>(
    Display_descriptor(), name, value);
}
enum BarSize : int {
  None = 0,
  Second = 1,
  Second5 = 5,
  Second10 = 10,
  Second15 = 15,
  Second30 = 30,
  Minute = 60,
  Minute2 = 120,
  Minute3 = 180,
  Minute5 = 300,
  Minute10 = 600,
  Minute15 = 900,
  Minute20 = 1200,
  Minute30 = 1800,
  Hour = 3600,
  Hour2 = 7200,
  Hour3 = 10800,
  Hour4 = 14400,
  Hour8 = 28800,
  Day = 86400,
  Week = 604800,
  Month = 2592000,
  Year = 31104000,
  BarSize_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  BarSize_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_MARKETS_EXPORT bool BarSize_IsValid(int value);
constexpr BarSize BarSize_MIN = None;
constexpr BarSize BarSize_MAX = Year;
constexpr int BarSize_ARRAYSIZE = BarSize_MAX + 1;

JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BarSize_descriptor();
template<typename T>
inline const std::string& BarSize_Name(T enum_t_value) {
  static_assert(::std::is_same<T, BarSize>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function BarSize_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    BarSize_descriptor(), enum_t_value);
}
inline bool BarSize_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, BarSize* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<BarSize>(
    BarSize_descriptor(), name, value);
}
enum ERequests : int {
  Ping = 0,
  RequsetPrevOptionValues = -1,
  WatchLists = -2,
  WatchList = -3,
  Portfolios = -4,
  DeleteWatchList = -5,
  EditWatchList = -6,
  GoogleLogin = -7,
  Query = -8,
  Filings = -9,
  Investors = -10,
  MarketData = 1,
  CancelMarketData = 2,
  PlaceOrder_ = 3,
  CancelOrder = 4,
  RequestOpenOrders = 5,
  REQ_ACCT_DATA = 6,
  REQ_EXECUTIONS = 7,
  RequestIds = 8,
  REQ_CONTRACT_DATA = 9,
  REQ_MKT_DEPTH = 10,
  CANCEL_MKT_DEPTH = 11,
  REQ_NEWS_BULLETINS = 12,
  CANCEL_NEWS_BULLETINS = 13,
  SET_SERVER_LOGLEVEL = 14,
  REQ_AUTO_OPEN_ORDERS = 15,
  RequestAllOpenOrders = 16,
  ManagedAccounts = 17,
  REQ_FA = 18,
  REPLACE_FA = 19,
  REQ_HISTORICAL_DATA = 20,
  EXERCISE_OPTIONS = 21,
  REQ_SCANNER_SUBSCRIPTION = 22,
  CANCEL_SCANNER_SUBSCRIPTION = 23,
  REQ_SCANNER_PARAMETERS = 24,
  CANCEL_HISTORICAL_DATA = 25,
  CurrentTime = 49,
  RequestRealTimeBars = 50,
  CANCEL_REAL_TIME_BARS = 51,
  RequestFundamentalData = 52,
  CANCEL_FUNDAMENTAL_DATA = 53,
  REQ_CALC_IMPLIED_VOLAT = 54,
  REQ_CALC_OPTION_PRICE = 55,
  CANCEL_CALC_IMPLIED_VOLAT = 56,
  CANCEL_CALC_OPTION_PRICE = 57,
  REQ_GLOBAL_CANCEL = 58,
  REQ_MARKET_DATA_TYPE = 59,
  Positions = 61,
  REQ_ACCOUNT_SUMMARY = 62,
  CANCEL_ACCOUNT_SUMMARY = 63,
  CANCEL_POSITIONS = 64,
  VERIFY_REQUEST = 65,
  VERIFY_MESSAGE = 66,
  QUERY_DISPLAY_GROUPS = 67,
  SUBSCRIBE_TO_GROUP_EVENTS = 68,
  UPDATE_DISPLAY_GROUP = 69,
  UNSUBSCRIBE_FROM_GROUP_EVENTS = 70,
  StartApi = 71,
  VERIFY_AND_AUTH_REQUEST = 72,
  VERIFY_AND_AUTH_MESSAGE = 73,
  PositionsMulti = 74,
  CancelPositionsMulti = 75,
  RequestAccountUpdatesMulti_ = 76,
  CANCEL_ACCOUNT_UPDATES_MULTI = 77,
  RequestOptionParams = 78,
  REQ_SOFT_DOLLAR_TIERS = 79,
  REQ_FAMILY_CODES = 80,
  REQ_MATCHING_SYMBOLS = 81,
  REQ_MKT_DEPTH_EXCHANGES = 82,
  REQ_SMART_COMPONENTS = 83,
  ReqNewsArticle = 84,
  ReqNewsProviders = 85,
  ReqHistoricalNews = 86,
  REQ_HEAD_TIMESTAMP = 87,
  REQ_HISTOGRAM_DATA = 88,
  CANCEL_HISTOGRAM_DATA = 89,
  CANCEL_HEAD_TIMESTAMP = 90,
  REQ_MARKET_RULE = 91,
  REQ_PNL = 92,
  CANCEL_PNL = 93,
  REQ_PNL_SINGLE = 94,
  CANCEL_PNL_SINGLE = 95,
  REQ_HISTORICAL_TICKS = 96,
  REQ_TICK_BY_TICK_DATA = 97,
  CANCEL_TICK_BY_TICK_DATA = 98,
  ERequests_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  ERequests_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
JDE_MARKETS_EXPORT bool ERequests_IsValid(int value);
constexpr ERequests ERequests_MIN = Investors;
constexpr ERequests ERequests_MAX = CANCEL_TICK_BY_TICK_DATA;
constexpr int ERequests_ARRAYSIZE = ERequests_MAX + 1;

JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ERequests_descriptor();
template<typename T>
inline const std::string& ERequests_Name(T enum_t_value) {
  static_assert(::std::is_same<T, ERequests>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function ERequests_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    ERequests_descriptor(), enum_t_value);
}
inline bool ERequests_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, ERequests* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<ERequests>(
    ERequests_descriptor(), name, value);
}
// ===================================================================

class JDE_MARKETS_EXPORT GenericRequests final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.GenericRequests) */ {
 public:
  inline GenericRequests() : GenericRequests(nullptr) {}
  ~GenericRequests() override;
  explicit constexpr GenericRequests(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  GenericRequests(const GenericRequests& from);
  GenericRequests(GenericRequests&& from) noexcept
    : GenericRequests() {
    *this = ::std::move(from);
  }

  inline GenericRequests& operator=(const GenericRequests& from) {
    CopyFrom(from);
    return *this;
  }
  inline GenericRequests& operator=(GenericRequests&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GenericRequests& default_instance() {
    return *internal_default_instance();
  }
  static inline const GenericRequests* internal_default_instance() {
    return reinterpret_cast<const GenericRequests*>(
               &_GenericRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GenericRequests& a, GenericRequests& b) {
    a.Swap(&b);
  }
  inline void Swap(GenericRequests* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GenericRequests* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GenericRequests* New() const final {
    return new GenericRequests();
  }

  GenericRequests* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GenericRequests>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GenericRequests& from);
  void MergeFrom(const GenericRequests& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GenericRequests* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.GenericRequests";
  }
  protected:
  explicit GenericRequests(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdsFieldNumber = 3,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // repeated int32 ids = 3;
  int ids_size() const;
  private:
  int _internal_ids_size() const;
  public:
  void clear_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_ids() const;
  void _internal_add_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 ids(int index) const;
  void set_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_ids();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .Jde.Markets.Proto.Requests.ERequests type = 2;
  void clear_type();
  ::Jde::Markets::Proto::Requests::ERequests type() const;
  void set_type(::Jde::Markets::Proto::Requests::ERequests value);
  private:
  ::Jde::Markets::Proto::Requests::ERequests _internal_type() const;
  void _internal_set_type(::Jde::Markets::Proto::Requests::ERequests value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.GenericRequests)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > ids_;
  mutable std::atomic<int> _ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT StdDevRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.StdDevRequest) */ {
 public:
  inline StdDevRequest() : StdDevRequest(nullptr) {}
  ~StdDevRequest() override;
  explicit constexpr StdDevRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StdDevRequest(const StdDevRequest& from);
  StdDevRequest(StdDevRequest&& from) noexcept
    : StdDevRequest() {
    *this = ::std::move(from);
  }

  inline StdDevRequest& operator=(const StdDevRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StdDevRequest& operator=(StdDevRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StdDevRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StdDevRequest* internal_default_instance() {
    return reinterpret_cast<const StdDevRequest*>(
               &_StdDevRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(StdDevRequest& a, StdDevRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StdDevRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StdDevRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StdDevRequest* New() const final {
    return new StdDevRequest();
  }

  StdDevRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StdDevRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StdDevRequest& from);
  void MergeFrom(const StdDevRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StdDevRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.StdDevRequest";
  }
  protected:
  explicit StdDevRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kDaysFieldNumber = 4,
    kStartFieldNumber = 3,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 contract_id = 2;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // double days = 4;
  void clear_days();
  double days() const;
  void set_days(double value);
  private:
  double _internal_days() const;
  void _internal_set_days(double value);
  public:

  // uint32 start = 3;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.StdDevRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id_;
  double days_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT StringRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.StringRequest) */ {
 public:
  inline StringRequest() : StringRequest(nullptr) {}
  ~StringRequest() override;
  explicit constexpr StringRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  StringRequest(const StringRequest& from);
  StringRequest(StringRequest&& from) noexcept
    : StringRequest() {
    *this = ::std::move(from);
  }

  inline StringRequest& operator=(const StringRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringRequest& operator=(StringRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StringRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StringRequest* internal_default_instance() {
    return reinterpret_cast<const StringRequest*>(
               &_StringRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StringRequest& a, StringRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StringRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StringRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StringRequest* New() const final {
    return new StringRequest();
  }

  StringRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringRequest& from);
  void MergeFrom(const StringRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.StringRequest";
  }
  protected:
  explicit StringRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIdFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string name = 3;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .Jde.Markets.Proto.Requests.ERequests type = 2;
  void clear_type();
  ::Jde::Markets::Proto::Requests::ERequests type() const;
  void set_type(::Jde::Markets::Proto::Requests::ERequests value);
  private:
  ::Jde::Markets::Proto::Requests::ERequests _internal_type() const;
  void _internal_set_type(::Jde::Markets::Proto::Requests::ERequests value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.StringRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT EditWatchListRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.EditWatchListRequest) */ {
 public:
  inline EditWatchListRequest() : EditWatchListRequest(nullptr) {}
  ~EditWatchListRequest() override;
  explicit constexpr EditWatchListRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  EditWatchListRequest(const EditWatchListRequest& from);
  EditWatchListRequest(EditWatchListRequest&& from) noexcept
    : EditWatchListRequest() {
    *this = ::std::move(from);
  }

  inline EditWatchListRequest& operator=(const EditWatchListRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EditWatchListRequest& operator=(EditWatchListRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EditWatchListRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EditWatchListRequest* internal_default_instance() {
    return reinterpret_cast<const EditWatchListRequest*>(
               &_EditWatchListRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(EditWatchListRequest& a, EditWatchListRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EditWatchListRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EditWatchListRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline EditWatchListRequest* New() const final {
    return new EditWatchListRequest();
  }

  EditWatchListRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EditWatchListRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EditWatchListRequest& from);
  void MergeFrom(const EditWatchListRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EditWatchListRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.EditWatchListRequest";
  }
  protected:
  explicit EditWatchListRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // .Jde.Markets.Proto.Watch.File file = 2;
  bool has_file() const;
  private:
  bool _internal_has_file() const;
  public:
  void clear_file();
  const ::Jde::Markets::Proto::Watch::File& file() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Watch::File* release_file();
  ::Jde::Markets::Proto::Watch::File* mutable_file();
  void set_allocated_file(::Jde::Markets::Proto::Watch::File* file);
  private:
  const ::Jde::Markets::Proto::Watch::File& _internal_file() const;
  ::Jde::Markets::Proto::Watch::File* _internal_mutable_file();
  public:
  void unsafe_arena_set_allocated_file(
      ::Jde::Markets::Proto::Watch::File* file);
  ::Jde::Markets::Proto::Watch::File* unsafe_arena_release_file();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.EditWatchListRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Jde::Markets::Proto::Watch::File* file_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestAccountUpdates final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestAccountUpdates) */ {
 public:
  inline RequestAccountUpdates() : RequestAccountUpdates(nullptr) {}
  ~RequestAccountUpdates() override;
  explicit constexpr RequestAccountUpdates(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestAccountUpdates(const RequestAccountUpdates& from);
  RequestAccountUpdates(RequestAccountUpdates&& from) noexcept
    : RequestAccountUpdates() {
    *this = ::std::move(from);
  }

  inline RequestAccountUpdates& operator=(const RequestAccountUpdates& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestAccountUpdates& operator=(RequestAccountUpdates&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestAccountUpdates& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestAccountUpdates* internal_default_instance() {
    return reinterpret_cast<const RequestAccountUpdates*>(
               &_RequestAccountUpdates_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RequestAccountUpdates& a, RequestAccountUpdates& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestAccountUpdates* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestAccountUpdates* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestAccountUpdates* New() const final {
    return new RequestAccountUpdates();
  }

  RequestAccountUpdates* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestAccountUpdates>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestAccountUpdates& from);
  void MergeFrom(const RequestAccountUpdates& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestAccountUpdates* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestAccountUpdates";
  }
  protected:
  explicit RequestAccountUpdates(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 2,
    kSubscribeFieldNumber = 1,
  };
  // string account_number = 2;
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // bool subscribe = 1;
  void clear_subscribe();
  bool subscribe() const;
  void set_subscribe(bool value);
  private:
  bool _internal_subscribe() const;
  void _internal_set_subscribe(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestAccountUpdates)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
  bool subscribe_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestAccountUpdatesMulti final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti) */ {
 public:
  inline RequestAccountUpdatesMulti() : RequestAccountUpdatesMulti(nullptr) {}
  ~RequestAccountUpdatesMulti() override;
  explicit constexpr RequestAccountUpdatesMulti(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestAccountUpdatesMulti(const RequestAccountUpdatesMulti& from);
  RequestAccountUpdatesMulti(RequestAccountUpdatesMulti&& from) noexcept
    : RequestAccountUpdatesMulti() {
    *this = ::std::move(from);
  }

  inline RequestAccountUpdatesMulti& operator=(const RequestAccountUpdatesMulti& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestAccountUpdatesMulti& operator=(RequestAccountUpdatesMulti&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestAccountUpdatesMulti& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestAccountUpdatesMulti* internal_default_instance() {
    return reinterpret_cast<const RequestAccountUpdatesMulti*>(
               &_RequestAccountUpdatesMulti_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(RequestAccountUpdatesMulti& a, RequestAccountUpdatesMulti& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestAccountUpdatesMulti* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestAccountUpdatesMulti* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestAccountUpdatesMulti* New() const final {
    return new RequestAccountUpdatesMulti();
  }

  RequestAccountUpdatesMulti* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestAccountUpdatesMulti>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestAccountUpdatesMulti& from);
  void MergeFrom(const RequestAccountUpdatesMulti& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestAccountUpdatesMulti* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti";
  }
  protected:
  explicit RequestAccountUpdatesMulti(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 2,
    kModelCodeFieldNumber = 3,
    kIdFieldNumber = 1,
    kLedgerAndNlvFieldNumber = 4,
  };
  // string account_number = 2;
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // string model_code = 3;
  void clear_model_code();
  const std::string& model_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_code();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_model_code();
  void set_allocated_model_code(std::string* model_code);
  private:
  const std::string& _internal_model_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_code(const std::string& value);
  std::string* _internal_mutable_model_code();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool ledger_and_nlv = 4;
  void clear_ledger_and_nlv();
  bool ledger_and_nlv() const;
  void set_ledger_and_nlv(bool value);
  private:
  bool _internal_ledger_and_nlv() const;
  void _internal_set_ledger_and_nlv(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  bool ledger_and_nlv_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestPositions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestPositions) */ {
 public:
  inline RequestPositions() : RequestPositions(nullptr) {}
  ~RequestPositions() override;
  explicit constexpr RequestPositions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestPositions(const RequestPositions& from);
  RequestPositions(RequestPositions&& from) noexcept
    : RequestPositions() {
    *this = ::std::move(from);
  }

  inline RequestPositions& operator=(const RequestPositions& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestPositions& operator=(RequestPositions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestPositions& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestPositions* internal_default_instance() {
    return reinterpret_cast<const RequestPositions*>(
               &_RequestPositions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(RequestPositions& a, RequestPositions& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestPositions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestPositions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestPositions* New() const final {
    return new RequestPositions();
  }

  RequestPositions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestPositions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestPositions& from);
  void MergeFrom(const RequestPositions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestPositions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestPositions";
  }
  protected:
  explicit RequestPositions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 2,
    kModelCodeFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // string account_number = 2;
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // string model_code = 3;
  void clear_model_code();
  const std::string& model_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_model_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_model_code();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_model_code();
  void set_allocated_model_code(std::string* model_code);
  private:
  const std::string& _internal_model_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_model_code(const std::string& value);
  std::string* _internal_mutable_model_code();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestPositions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr model_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT ImpliedVolatility final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.ImpliedVolatility) */ {
 public:
  inline ImpliedVolatility() : ImpliedVolatility(nullptr) {}
  ~ImpliedVolatility() override;
  explicit constexpr ImpliedVolatility(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImpliedVolatility(const ImpliedVolatility& from);
  ImpliedVolatility(ImpliedVolatility&& from) noexcept
    : ImpliedVolatility() {
    *this = ::std::move(from);
  }

  inline ImpliedVolatility& operator=(const ImpliedVolatility& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImpliedVolatility& operator=(ImpliedVolatility&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImpliedVolatility& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImpliedVolatility* internal_default_instance() {
    return reinterpret_cast<const ImpliedVolatility*>(
               &_ImpliedVolatility_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ImpliedVolatility& a, ImpliedVolatility& b) {
    a.Swap(&b);
  }
  inline void Swap(ImpliedVolatility* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImpliedVolatility* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImpliedVolatility* New() const final {
    return new ImpliedVolatility();
  }

  ImpliedVolatility* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImpliedVolatility>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImpliedVolatility& from);
  void MergeFrom(const ImpliedVolatility& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImpliedVolatility* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.ImpliedVolatility";
  }
  protected:
  explicit ImpliedVolatility(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOptionPriceFieldNumber = 2,
    kUnderlyingPriceFieldNumber = 3,
    kContractIdFieldNumber = 1,
  };
  // double option_price = 2;
  void clear_option_price();
  double option_price() const;
  void set_option_price(double value);
  private:
  double _internal_option_price() const;
  void _internal_set_option_price(double value);
  public:

  // double underlying_price = 3;
  void clear_underlying_price();
  double underlying_price() const;
  void set_underlying_price(double value);
  private:
  double _internal_underlying_price() const;
  void _internal_set_underlying_price(double value);
  public:

  // int32 contract_id = 1;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.ImpliedVolatility)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double option_price_;
  double underlying_price_;
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT ImpliedVolatilityRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest) */ {
 public:
  inline ImpliedVolatilityRequest() : ImpliedVolatilityRequest(nullptr) {}
  ~ImpliedVolatilityRequest() override;
  explicit constexpr ImpliedVolatilityRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImpliedVolatilityRequest(const ImpliedVolatilityRequest& from);
  ImpliedVolatilityRequest(ImpliedVolatilityRequest&& from) noexcept
    : ImpliedVolatilityRequest() {
    *this = ::std::move(from);
  }

  inline ImpliedVolatilityRequest& operator=(const ImpliedVolatilityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImpliedVolatilityRequest& operator=(ImpliedVolatilityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImpliedVolatilityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImpliedVolatilityRequest* internal_default_instance() {
    return reinterpret_cast<const ImpliedVolatilityRequest*>(
               &_ImpliedVolatilityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ImpliedVolatilityRequest& a, ImpliedVolatilityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ImpliedVolatilityRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImpliedVolatilityRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImpliedVolatilityRequest* New() const final {
    return new ImpliedVolatilityRequest();
  }

  ImpliedVolatilityRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImpliedVolatilityRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImpliedVolatilityRequest& from);
  void MergeFrom(const ImpliedVolatilityRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImpliedVolatilityRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.ImpliedVolatilityRequest";
  }
  protected:
  explicit ImpliedVolatilityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .Jde.Markets.Proto.Requests.ImpliedVolatility contracts = 2;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;
  public:
  void clear_contracts();
  ::Jde::Markets::Proto::Requests::ImpliedVolatility* mutable_contracts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedVolatility >*
      mutable_contracts();
  private:
  const ::Jde::Markets::Proto::Requests::ImpliedVolatility& _internal_contracts(int index) const;
  ::Jde::Markets::Proto::Requests::ImpliedVolatility* _internal_add_contracts();
  public:
  const ::Jde::Markets::Proto::Requests::ImpliedVolatility& contracts(int index) const;
  ::Jde::Markets::Proto::Requests::ImpliedVolatility* add_contracts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedVolatility >&
      contracts() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedVolatility > contracts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT ImpliedPrice final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.ImpliedPrice) */ {
 public:
  inline ImpliedPrice() : ImpliedPrice(nullptr) {}
  ~ImpliedPrice() override;
  explicit constexpr ImpliedPrice(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImpliedPrice(const ImpliedPrice& from);
  ImpliedPrice(ImpliedPrice&& from) noexcept
    : ImpliedPrice() {
    *this = ::std::move(from);
  }

  inline ImpliedPrice& operator=(const ImpliedPrice& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImpliedPrice& operator=(ImpliedPrice&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImpliedPrice& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImpliedPrice* internal_default_instance() {
    return reinterpret_cast<const ImpliedPrice*>(
               &_ImpliedPrice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ImpliedPrice& a, ImpliedPrice& b) {
    a.Swap(&b);
  }
  inline void Swap(ImpliedPrice* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImpliedPrice* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImpliedPrice* New() const final {
    return new ImpliedPrice();
  }

  ImpliedPrice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImpliedPrice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImpliedPrice& from);
  void MergeFrom(const ImpliedPrice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImpliedPrice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.ImpliedPrice";
  }
  protected:
  explicit ImpliedPrice(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVolatilityFieldNumber = 2,
    kUnderlyingPriceFieldNumber = 3,
    kContractIdFieldNumber = 1,
  };
  // double volatility = 2;
  void clear_volatility();
  double volatility() const;
  void set_volatility(double value);
  private:
  double _internal_volatility() const;
  void _internal_set_volatility(double value);
  public:

  // double underlying_price = 3;
  void clear_underlying_price();
  double underlying_price() const;
  void set_underlying_price(double value);
  private:
  double _internal_underlying_price() const;
  void _internal_set_underlying_price(double value);
  public:

  // int32 contract_id = 1;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.ImpliedPrice)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double volatility_;
  double underlying_price_;
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT ImpliedPriceRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.ImpliedPriceRequest) */ {
 public:
  inline ImpliedPriceRequest() : ImpliedPriceRequest(nullptr) {}
  ~ImpliedPriceRequest() override;
  explicit constexpr ImpliedPriceRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImpliedPriceRequest(const ImpliedPriceRequest& from);
  ImpliedPriceRequest(ImpliedPriceRequest&& from) noexcept
    : ImpliedPriceRequest() {
    *this = ::std::move(from);
  }

  inline ImpliedPriceRequest& operator=(const ImpliedPriceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImpliedPriceRequest& operator=(ImpliedPriceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImpliedPriceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImpliedPriceRequest* internal_default_instance() {
    return reinterpret_cast<const ImpliedPriceRequest*>(
               &_ImpliedPriceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ImpliedPriceRequest& a, ImpliedPriceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ImpliedPriceRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImpliedPriceRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImpliedPriceRequest* New() const final {
    return new ImpliedPriceRequest();
  }

  ImpliedPriceRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImpliedPriceRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImpliedPriceRequest& from);
  void MergeFrom(const ImpliedPriceRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImpliedPriceRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.ImpliedPriceRequest";
  }
  protected:
  explicit ImpliedPriceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .Jde.Markets.Proto.Requests.ImpliedPrice contracts = 2;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;
  public:
  void clear_contracts();
  ::Jde::Markets::Proto::Requests::ImpliedPrice* mutable_contracts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedPrice >*
      mutable_contracts();
  private:
  const ::Jde::Markets::Proto::Requests::ImpliedPrice& _internal_contracts(int index) const;
  ::Jde::Markets::Proto::Requests::ImpliedPrice* _internal_add_contracts();
  public:
  const ::Jde::Markets::Proto::Requests::ImpliedPrice& contracts(int index) const;
  ::Jde::Markets::Proto::Requests::ImpliedPrice* add_contracts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedPrice >&
      contracts() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.ImpliedPriceRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedPrice > contracts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestHistoricalData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestHistoricalData) */ {
 public:
  inline RequestHistoricalData() : RequestHistoricalData(nullptr) {}
  ~RequestHistoricalData() override;
  explicit constexpr RequestHistoricalData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestHistoricalData(const RequestHistoricalData& from);
  RequestHistoricalData(RequestHistoricalData&& from) noexcept
    : RequestHistoricalData() {
    *this = ::std::move(from);
  }

  inline RequestHistoricalData& operator=(const RequestHistoricalData& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestHistoricalData& operator=(RequestHistoricalData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestHistoricalData& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestHistoricalData* internal_default_instance() {
    return reinterpret_cast<const RequestHistoricalData*>(
               &_RequestHistoricalData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(RequestHistoricalData& a, RequestHistoricalData& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestHistoricalData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestHistoricalData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestHistoricalData* New() const final {
    return new RequestHistoricalData();
  }

  RequestHistoricalData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestHistoricalData>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestHistoricalData& from);
  void MergeFrom(const RequestHistoricalData& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestHistoricalData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestHistoricalData";
  }
  protected:
  explicit RequestHistoricalData(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractFieldNumber = 2,
    kIdFieldNumber = 1,
    kDateFieldNumber = 3,
    kDaysFieldNumber = 4,
    kBarSizeFieldNumber = 5,
    kDisplayFieldNumber = 6,
    kUseRthFieldNumber = 7,
    kKeepUpToDateFieldNumber = 8,
  };
  // .Jde.Markets.Proto.Contract contract = 2;
  bool has_contract() const;
  private:
  bool _internal_has_contract() const;
  public:
  void clear_contract();
  const ::Jde::Markets::Proto::Contract& contract() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Contract* release_contract();
  ::Jde::Markets::Proto::Contract* mutable_contract();
  void set_allocated_contract(::Jde::Markets::Proto::Contract* contract);
  private:
  const ::Jde::Markets::Proto::Contract& _internal_contract() const;
  ::Jde::Markets::Proto::Contract* _internal_mutable_contract();
  public:
  void unsafe_arena_set_allocated_contract(
      ::Jde::Markets::Proto::Contract* contract);
  ::Jde::Markets::Proto::Contract* unsafe_arena_release_contract();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 date = 3;
  void clear_date();
  ::PROTOBUF_NAMESPACE_ID::int32 date() const;
  void set_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_date() const;
  void _internal_set_date(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 days = 4;
  void clear_days();
  ::PROTOBUF_NAMESPACE_ID::uint32 days() const;
  void set_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_days() const;
  void _internal_set_days(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .Jde.Markets.Proto.Requests.BarSize bar_size = 5;
  void clear_bar_size();
  ::Jde::Markets::Proto::Requests::BarSize bar_size() const;
  void set_bar_size(::Jde::Markets::Proto::Requests::BarSize value);
  private:
  ::Jde::Markets::Proto::Requests::BarSize _internal_bar_size() const;
  void _internal_set_bar_size(::Jde::Markets::Proto::Requests::BarSize value);
  public:

  // .Jde.Markets.Proto.Requests.Display display = 6;
  void clear_display();
  ::Jde::Markets::Proto::Requests::Display display() const;
  void set_display(::Jde::Markets::Proto::Requests::Display value);
  private:
  ::Jde::Markets::Proto::Requests::Display _internal_display() const;
  void _internal_set_display(::Jde::Markets::Proto::Requests::Display value);
  public:

  // bool use_rth = 7;
  void clear_use_rth();
  bool use_rth() const;
  void set_use_rth(bool value);
  private:
  bool _internal_use_rth() const;
  void _internal_set_use_rth(bool value);
  public:

  // bool keep_up_to_date = 8;
  void clear_keep_up_to_date();
  bool keep_up_to_date() const;
  void set_keep_up_to_date(bool value);
  private:
  bool _internal_keep_up_to_date() const;
  void _internal_set_keep_up_to_date(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestHistoricalData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Jde::Markets::Proto::Contract* contract_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 date_;
  ::PROTOBUF_NAMESPACE_ID::uint32 days_;
  int bar_size_;
  int display_;
  bool use_rth_;
  bool keep_up_to_date_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestMrkDataSmart final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestMrkDataSmart) */ {
 public:
  inline RequestMrkDataSmart() : RequestMrkDataSmart(nullptr) {}
  ~RequestMrkDataSmart() override;
  explicit constexpr RequestMrkDataSmart(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestMrkDataSmart(const RequestMrkDataSmart& from);
  RequestMrkDataSmart(RequestMrkDataSmart&& from) noexcept
    : RequestMrkDataSmart() {
    *this = ::std::move(from);
  }

  inline RequestMrkDataSmart& operator=(const RequestMrkDataSmart& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestMrkDataSmart& operator=(RequestMrkDataSmart&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestMrkDataSmart& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestMrkDataSmart* internal_default_instance() {
    return reinterpret_cast<const RequestMrkDataSmart*>(
               &_RequestMrkDataSmart_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(RequestMrkDataSmart& a, RequestMrkDataSmart& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestMrkDataSmart* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestMrkDataSmart* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestMrkDataSmart* New() const final {
    return new RequestMrkDataSmart();
  }

  RequestMrkDataSmart* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestMrkDataSmart>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestMrkDataSmart& from);
  void MergeFrom(const RequestMrkDataSmart& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestMrkDataSmart* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestMrkDataSmart";
  }
  protected:
  explicit RequestMrkDataSmart(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTickListFieldNumber = 3,
    kIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kSnapshotFieldNumber = 4,
  };
  // repeated .Jde.Markets.Proto.Requests.ETickList tick_list = 3;
  int tick_list_size() const;
  private:
  int _internal_tick_list_size() const;
  public:
  void clear_tick_list();
  private:
  ::Jde::Markets::Proto::Requests::ETickList _internal_tick_list(int index) const;
  void _internal_add_tick_list(::Jde::Markets::Proto::Requests::ETickList value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_tick_list();
  public:
  ::Jde::Markets::Proto::Requests::ETickList tick_list(int index) const;
  void set_tick_list(int index, ::Jde::Markets::Proto::Requests::ETickList value);
  void add_tick_list(::Jde::Markets::Proto::Requests::ETickList value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& tick_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_tick_list();

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 contract_id = 2;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool snapshot = 4;
  void clear_snapshot();
  bool snapshot() const;
  void set_snapshot(bool value);
  private:
  bool _internal_snapshot() const;
  void _internal_set_snapshot(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestMrkDataSmart)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> tick_list_;
  mutable std::atomic<int> _tick_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 contract_id_;
  bool snapshot_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestContractDetails final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestContractDetails) */ {
 public:
  inline RequestContractDetails() : RequestContractDetails(nullptr) {}
  ~RequestContractDetails() override;
  explicit constexpr RequestContractDetails(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestContractDetails(const RequestContractDetails& from);
  RequestContractDetails(RequestContractDetails&& from) noexcept
    : RequestContractDetails() {
    *this = ::std::move(from);
  }

  inline RequestContractDetails& operator=(const RequestContractDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestContractDetails& operator=(RequestContractDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestContractDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestContractDetails* internal_default_instance() {
    return reinterpret_cast<const RequestContractDetails*>(
               &_RequestContractDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(RequestContractDetails& a, RequestContractDetails& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestContractDetails* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestContractDetails* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestContractDetails* New() const final {
    return new RequestContractDetails();
  }

  RequestContractDetails* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestContractDetails>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestContractDetails& from);
  void MergeFrom(const RequestContractDetails& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestContractDetails* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestContractDetails";
  }
  protected:
  explicit RequestContractDetails(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kContractsFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .Jde.Markets.Proto.Contract contracts = 2;
  int contracts_size() const;
  private:
  int _internal_contracts_size() const;
  public:
  void clear_contracts();
  ::Jde::Markets::Proto::Contract* mutable_contracts(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Contract >*
      mutable_contracts();
  private:
  const ::Jde::Markets::Proto::Contract& _internal_contracts(int index) const;
  ::Jde::Markets::Proto::Contract* _internal_add_contracts();
  public:
  const ::Jde::Markets::Proto::Contract& contracts(int index) const;
  ::Jde::Markets::Proto::Contract* add_contracts();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Contract >&
      contracts() const;

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestContractDetails)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Contract > contracts_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestOptions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestOptions) */ {
 public:
  inline RequestOptions() : RequestOptions(nullptr) {}
  ~RequestOptions() override;
  explicit constexpr RequestOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestOptions(const RequestOptions& from);
  RequestOptions(RequestOptions&& from) noexcept
    : RequestOptions() {
    *this = ::std::move(from);
  }

  inline RequestOptions& operator=(const RequestOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestOptions& operator=(RequestOptions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestOptions* internal_default_instance() {
    return reinterpret_cast<const RequestOptions*>(
               &_RequestOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(RequestOptions& a, RequestOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestOptions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestOptions* New() const final {
    return new RequestOptions();
  }

  RequestOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestOptions& from);
  void MergeFrom(const RequestOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestOptions";
  }
  protected:
  explicit RequestOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kSecurityTypeFieldNumber = 3,
    kStartExpirationFieldNumber = 4,
    kStartSrikeFieldNumber = 6,
    kEndStrikeFieldNumber = 7,
    kEndExpirationFieldNumber = 5,
  };
  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 contract_id = 2;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 security_type = 3;
  void clear_security_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 security_type() const;
  void set_security_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_security_type() const;
  void _internal_set_security_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start_expiration = 4;
  void clear_start_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 start_expiration() const;
  void set_start_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start_expiration() const;
  void _internal_set_start_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // double start_srike = 6;
  void clear_start_srike();
  double start_srike() const;
  void set_start_srike(double value);
  private:
  double _internal_start_srike() const;
  void _internal_set_start_srike(double value);
  public:

  // double end_strike = 7;
  void clear_end_strike();
  double end_strike() const;
  void set_end_strike(double value);
  private:
  double _internal_end_strike() const;
  void _internal_set_end_strike(double value);
  public:

  // uint32 end_expiration = 5;
  void clear_end_expiration();
  ::PROTOBUF_NAMESPACE_ID::uint32 end_expiration() const;
  void set_end_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end_expiration() const;
  void _internal_set_end_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 security_type_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_expiration_;
  double start_srike_;
  double end_strike_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_expiration_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT FlexExecutions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.FlexExecutions) */ {
 public:
  inline FlexExecutions() : FlexExecutions(nullptr) {}
  ~FlexExecutions() override;
  explicit constexpr FlexExecutions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  FlexExecutions(const FlexExecutions& from);
  FlexExecutions(FlexExecutions&& from) noexcept
    : FlexExecutions() {
    *this = ::std::move(from);
  }

  inline FlexExecutions& operator=(const FlexExecutions& from) {
    CopyFrom(from);
    return *this;
  }
  inline FlexExecutions& operator=(FlexExecutions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FlexExecutions& default_instance() {
    return *internal_default_instance();
  }
  static inline const FlexExecutions* internal_default_instance() {
    return reinterpret_cast<const FlexExecutions*>(
               &_FlexExecutions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FlexExecutions& a, FlexExecutions& b) {
    a.Swap(&b);
  }
  inline void Swap(FlexExecutions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FlexExecutions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FlexExecutions* New() const final {
    return new FlexExecutions();
  }

  FlexExecutions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FlexExecutions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FlexExecutions& from);
  void MergeFrom(const FlexExecutions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FlexExecutions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.FlexExecutions";
  }
  protected:
  explicit FlexExecutions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 2,
    kIdFieldNumber = 1,
    kStartFieldNumber = 3,
    kEndFieldNumber = 4,
  };
  // string account_number = 2;
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start = 3;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 end = 4;
  void clear_end();
  ::PROTOBUF_NAMESPACE_ID::uint32 end() const;
  void set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end() const;
  void _internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.FlexExecutions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT PlaceOrder final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.PlaceOrder) */ {
 public:
  inline PlaceOrder() : PlaceOrder(nullptr) {}
  ~PlaceOrder() override;
  explicit constexpr PlaceOrder(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PlaceOrder(const PlaceOrder& from);
  PlaceOrder(PlaceOrder&& from) noexcept
    : PlaceOrder() {
    *this = ::std::move(from);
  }

  inline PlaceOrder& operator=(const PlaceOrder& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlaceOrder& operator=(PlaceOrder&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlaceOrder& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlaceOrder* internal_default_instance() {
    return reinterpret_cast<const PlaceOrder*>(
               &_PlaceOrder_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PlaceOrder& a, PlaceOrder& b) {
    a.Swap(&b);
  }
  inline void Swap(PlaceOrder* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlaceOrder* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlaceOrder* New() const final {
    return new PlaceOrder();
  }

  PlaceOrder* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlaceOrder>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlaceOrder& from);
  void MergeFrom(const PlaceOrder& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlaceOrder* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.PlaceOrder";
  }
  protected:
  explicit PlaceOrder(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBlockIdFieldNumber = 6,
    kContractFieldNumber = 2,
    kOrderFieldNumber = 3,
    kStopFieldNumber = 4,
    kStopLimitFieldNumber = 5,
    kIdFieldNumber = 1,
  };
  // string block_id = 6;
  void clear_block_id();
  const std::string& block_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_block_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_block_id();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_block_id();
  void set_allocated_block_id(std::string* block_id);
  private:
  const std::string& _internal_block_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_id(const std::string& value);
  std::string* _internal_mutable_block_id();
  public:

  // .Jde.Markets.Proto.Contract contract = 2;
  bool has_contract() const;
  private:
  bool _internal_has_contract() const;
  public:
  void clear_contract();
  const ::Jde::Markets::Proto::Contract& contract() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Contract* release_contract();
  ::Jde::Markets::Proto::Contract* mutable_contract();
  void set_allocated_contract(::Jde::Markets::Proto::Contract* contract);
  private:
  const ::Jde::Markets::Proto::Contract& _internal_contract() const;
  ::Jde::Markets::Proto::Contract* _internal_mutable_contract();
  public:
  void unsafe_arena_set_allocated_contract(
      ::Jde::Markets::Proto::Contract* contract);
  ::Jde::Markets::Proto::Contract* unsafe_arena_release_contract();

  // .Jde.Markets.Proto.Order order = 3;
  bool has_order() const;
  private:
  bool _internal_has_order() const;
  public:
  void clear_order();
  const ::Jde::Markets::Proto::Order& order() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Order* release_order();
  ::Jde::Markets::Proto::Order* mutable_order();
  void set_allocated_order(::Jde::Markets::Proto::Order* order);
  private:
  const ::Jde::Markets::Proto::Order& _internal_order() const;
  ::Jde::Markets::Proto::Order* _internal_mutable_order();
  public:
  void unsafe_arena_set_allocated_order(
      ::Jde::Markets::Proto::Order* order);
  ::Jde::Markets::Proto::Order* unsafe_arena_release_order();

  // double stop = 4;
  void clear_stop();
  double stop() const;
  void set_stop(double value);
  private:
  double _internal_stop() const;
  void _internal_set_stop(double value);
  public:

  // double stop_limit = 5;
  void clear_stop_limit();
  double stop_limit() const;
  void set_stop_limit(double value);
  private:
  double _internal_stop_limit() const;
  void _internal_set_stop_limit(double value);
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.PlaceOrder)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr block_id_;
  ::Jde::Markets::Proto::Contract* contract_;
  ::Jde::Markets::Proto::Order* order_;
  double stop_;
  double stop_limit_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestExecutions final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestExecutions) */ {
 public:
  inline RequestExecutions() : RequestExecutions(nullptr) {}
  ~RequestExecutions() override;
  explicit constexpr RequestExecutions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestExecutions(const RequestExecutions& from);
  RequestExecutions(RequestExecutions&& from) noexcept
    : RequestExecutions() {
    *this = ::std::move(from);
  }

  inline RequestExecutions& operator=(const RequestExecutions& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestExecutions& operator=(RequestExecutions&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestExecutions& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestExecutions* internal_default_instance() {
    return reinterpret_cast<const RequestExecutions*>(
               &_RequestExecutions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(RequestExecutions& a, RequestExecutions& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestExecutions* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestExecutions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestExecutions* New() const final {
    return new RequestExecutions();
  }

  RequestExecutions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestExecutions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestExecutions& from);
  void MergeFrom(const RequestExecutions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestExecutions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestExecutions";
  }
  protected:
  explicit RequestExecutions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountNumberFieldNumber = 3,
    kSymbolFieldNumber = 5,
    kSecurityTypeFieldNumber = 6,
    kExchangeFieldNumber = 7,
    kSideFieldNumber = 8,
    kIdFieldNumber = 1,
    kClientIdFieldNumber = 2,
    kTimeFieldNumber = 4,
  };
  // string account_number = 3;
  void clear_account_number();
  const std::string& account_number() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_account_number(ArgT0&& arg0, ArgT... args);
  std::string* mutable_account_number();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_account_number();
  void set_allocated_account_number(std::string* account_number);
  private:
  const std::string& _internal_account_number() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_number(const std::string& value);
  std::string* _internal_mutable_account_number();
  public:

  // string symbol = 5;
  void clear_symbol();
  const std::string& symbol() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_symbol(ArgT0&& arg0, ArgT... args);
  std::string* mutable_symbol();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_symbol();
  void set_allocated_symbol(std::string* symbol);
  private:
  const std::string& _internal_symbol() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const std::string& value);
  std::string* _internal_mutable_symbol();
  public:

  // string security_type = 6;
  void clear_security_type();
  const std::string& security_type() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_security_type(ArgT0&& arg0, ArgT... args);
  std::string* mutable_security_type();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_security_type();
  void set_allocated_security_type(std::string* security_type);
  private:
  const std::string& _internal_security_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_security_type(const std::string& value);
  std::string* _internal_mutable_security_type();
  public:

  // string exchange = 7;
  void clear_exchange();
  const std::string& exchange() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_exchange(ArgT0&& arg0, ArgT... args);
  std::string* mutable_exchange();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_exchange();
  void set_allocated_exchange(std::string* exchange);
  private:
  const std::string& _internal_exchange() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(const std::string& value);
  std::string* _internal_mutable_exchange();
  public:

  // string side = 8;
  void clear_side();
  const std::string& side() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_side(ArgT0&& arg0, ArgT... args);
  std::string* mutable_side();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_side();
  void set_allocated_side(std::string* side);
  private:
  const std::string& _internal_side() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_side(const std::string& value);
  std::string* _internal_mutable_side();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 client_id = 2;
  void clear_client_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 client_id() const;
  void set_client_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_client_id() const;
  void _internal_set_client_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 time = 4;
  void clear_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 time() const;
  void set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_time() const;
  void _internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestExecutions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr account_number_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr symbol_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr security_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr exchange_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr side_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 client_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT Custom final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.Custom) */ {
 public:
  inline Custom() : Custom(nullptr) {}
  ~Custom() override;
  explicit constexpr Custom(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Custom(const Custom& from);
  Custom(Custom&& from) noexcept
    : Custom() {
    *this = ::std::move(from);
  }

  inline Custom& operator=(const Custom& from) {
    CopyFrom(from);
    return *this;
  }
  inline Custom& operator=(Custom&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Custom& default_instance() {
    return *internal_default_instance();
  }
  static inline const Custom* internal_default_instance() {
    return reinterpret_cast<const Custom*>(
               &_Custom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(Custom& a, Custom& b) {
    a.Swap(&b);
  }
  inline void Swap(Custom* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Custom* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Custom* New() const final {
    return new Custom();
  }

  Custom* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Custom>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Custom& from);
  void MergeFrom(const Custom& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Custom* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.Custom";
  }
  protected:
  explicit Custom(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // bytes message = 2;
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.Custom)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestUnion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestUnion) */ {
 public:
  inline RequestUnion() : RequestUnion(nullptr) {}
  ~RequestUnion() override;
  explicit constexpr RequestUnion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestUnion(const RequestUnion& from);
  RequestUnion(RequestUnion&& from) noexcept
    : RequestUnion() {
    *this = ::std::move(from);
  }

  inline RequestUnion& operator=(const RequestUnion& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestUnion& operator=(RequestUnion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestUnion& default_instance() {
    return *internal_default_instance();
  }
  enum ValueCase {
    kAccountUpdates = 1,
    kAccountUpdatesMulti = 2,
    kContractDetails = 3,
    kGenericRequests = 4,
    kMarketDataSmart = 5,
    kOptions = 7,
    kHistoricalData = 8,
    kFlexExecutions = 9,
    kPlaceOrder = 10,
    kRequestPositions = 11,
    kRequestExecutions = 12,
    kStringRequest = 13,
    kEditWatchList = 14,
    kNewsArticleRequest = 15,
    kHistoricalNewsRequest = 16,
    kStdDev = 17,
    kImpliedVolatility = 18,
    kImpliedPrice = 19,
    kBlockly = 20,
    VALUE_NOT_SET = 0,
  };

  static inline const RequestUnion* internal_default_instance() {
    return reinterpret_cast<const RequestUnion*>(
               &_RequestUnion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(RequestUnion& a, RequestUnion& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestUnion* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestUnion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestUnion* New() const final {
    return new RequestUnion();
  }

  RequestUnion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestUnion>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestUnion& from);
  void MergeFrom(const RequestUnion& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestUnion* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestUnion";
  }
  protected:
  explicit RequestUnion(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccountUpdatesFieldNumber = 1,
    kAccountUpdatesMultiFieldNumber = 2,
    kContractDetailsFieldNumber = 3,
    kGenericRequestsFieldNumber = 4,
    kMarketDataSmartFieldNumber = 5,
    kOptionsFieldNumber = 7,
    kHistoricalDataFieldNumber = 8,
    kFlexExecutionsFieldNumber = 9,
    kPlaceOrderFieldNumber = 10,
    kRequestPositionsFieldNumber = 11,
    kRequestExecutionsFieldNumber = 12,
    kStringRequestFieldNumber = 13,
    kEditWatchListFieldNumber = 14,
    kNewsArticleRequestFieldNumber = 15,
    kHistoricalNewsRequestFieldNumber = 16,
    kStdDevFieldNumber = 17,
    kImpliedVolatilityFieldNumber = 18,
    kImpliedPriceFieldNumber = 19,
    kBlocklyFieldNumber = 20,
  };
  // .Jde.Markets.Proto.Requests.RequestAccountUpdates account_updates = 1;
  bool has_account_updates() const;
  private:
  bool _internal_has_account_updates() const;
  public:
  void clear_account_updates();
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdates& account_updates() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestAccountUpdates* release_account_updates();
  ::Jde::Markets::Proto::Requests::RequestAccountUpdates* mutable_account_updates();
  void set_allocated_account_updates(::Jde::Markets::Proto::Requests::RequestAccountUpdates* account_updates);
  private:
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdates& _internal_account_updates() const;
  ::Jde::Markets::Proto::Requests::RequestAccountUpdates* _internal_mutable_account_updates();
  public:
  void unsafe_arena_set_allocated_account_updates(
      ::Jde::Markets::Proto::Requests::RequestAccountUpdates* account_updates);
  ::Jde::Markets::Proto::Requests::RequestAccountUpdates* unsafe_arena_release_account_updates();

  // .Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti account_updates_multi = 2;
  bool has_account_updates_multi() const;
  private:
  bool _internal_has_account_updates_multi() const;
  public:
  void clear_account_updates_multi();
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti& account_updates_multi() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* release_account_updates_multi();
  ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* mutable_account_updates_multi();
  void set_allocated_account_updates_multi(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* account_updates_multi);
  private:
  const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti& _internal_account_updates_multi() const;
  ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* _internal_mutable_account_updates_multi();
  public:
  void unsafe_arena_set_allocated_account_updates_multi(
      ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* account_updates_multi);
  ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* unsafe_arena_release_account_updates_multi();

  // .Jde.Markets.Proto.Requests.RequestContractDetails contract_details = 3;
  bool has_contract_details() const;
  private:
  bool _internal_has_contract_details() const;
  public:
  void clear_contract_details();
  const ::Jde::Markets::Proto::Requests::RequestContractDetails& contract_details() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestContractDetails* release_contract_details();
  ::Jde::Markets::Proto::Requests::RequestContractDetails* mutable_contract_details();
  void set_allocated_contract_details(::Jde::Markets::Proto::Requests::RequestContractDetails* contract_details);
  private:
  const ::Jde::Markets::Proto::Requests::RequestContractDetails& _internal_contract_details() const;
  ::Jde::Markets::Proto::Requests::RequestContractDetails* _internal_mutable_contract_details();
  public:
  void unsafe_arena_set_allocated_contract_details(
      ::Jde::Markets::Proto::Requests::RequestContractDetails* contract_details);
  ::Jde::Markets::Proto::Requests::RequestContractDetails* unsafe_arena_release_contract_details();

  // .Jde.Markets.Proto.Requests.GenericRequests generic_requests = 4;
  bool has_generic_requests() const;
  private:
  bool _internal_has_generic_requests() const;
  public:
  void clear_generic_requests();
  const ::Jde::Markets::Proto::Requests::GenericRequests& generic_requests() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::GenericRequests* release_generic_requests();
  ::Jde::Markets::Proto::Requests::GenericRequests* mutable_generic_requests();
  void set_allocated_generic_requests(::Jde::Markets::Proto::Requests::GenericRequests* generic_requests);
  private:
  const ::Jde::Markets::Proto::Requests::GenericRequests& _internal_generic_requests() const;
  ::Jde::Markets::Proto::Requests::GenericRequests* _internal_mutable_generic_requests();
  public:
  void unsafe_arena_set_allocated_generic_requests(
      ::Jde::Markets::Proto::Requests::GenericRequests* generic_requests);
  ::Jde::Markets::Proto::Requests::GenericRequests* unsafe_arena_release_generic_requests();

  // .Jde.Markets.Proto.Requests.RequestMrkDataSmart market_data_smart = 5;
  bool has_market_data_smart() const;
  private:
  bool _internal_has_market_data_smart() const;
  public:
  void clear_market_data_smart();
  const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart& market_data_smart() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* release_market_data_smart();
  ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* mutable_market_data_smart();
  void set_allocated_market_data_smart(::Jde::Markets::Proto::Requests::RequestMrkDataSmart* market_data_smart);
  private:
  const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart& _internal_market_data_smart() const;
  ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* _internal_mutable_market_data_smart();
  public:
  void unsafe_arena_set_allocated_market_data_smart(
      ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* market_data_smart);
  ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* unsafe_arena_release_market_data_smart();

  // .Jde.Markets.Proto.Requests.RequestOptions options = 7;
  bool has_options() const;
  private:
  bool _internal_has_options() const;
  public:
  void clear_options();
  const ::Jde::Markets::Proto::Requests::RequestOptions& options() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestOptions* release_options();
  ::Jde::Markets::Proto::Requests::RequestOptions* mutable_options();
  void set_allocated_options(::Jde::Markets::Proto::Requests::RequestOptions* options);
  private:
  const ::Jde::Markets::Proto::Requests::RequestOptions& _internal_options() const;
  ::Jde::Markets::Proto::Requests::RequestOptions* _internal_mutable_options();
  public:
  void unsafe_arena_set_allocated_options(
      ::Jde::Markets::Proto::Requests::RequestOptions* options);
  ::Jde::Markets::Proto::Requests::RequestOptions* unsafe_arena_release_options();

  // .Jde.Markets.Proto.Requests.RequestHistoricalData historical_data = 8;
  bool has_historical_data() const;
  private:
  bool _internal_has_historical_data() const;
  public:
  void clear_historical_data();
  const ::Jde::Markets::Proto::Requests::RequestHistoricalData& historical_data() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestHistoricalData* release_historical_data();
  ::Jde::Markets::Proto::Requests::RequestHistoricalData* mutable_historical_data();
  void set_allocated_historical_data(::Jde::Markets::Proto::Requests::RequestHistoricalData* historical_data);
  private:
  const ::Jde::Markets::Proto::Requests::RequestHistoricalData& _internal_historical_data() const;
  ::Jde::Markets::Proto::Requests::RequestHistoricalData* _internal_mutable_historical_data();
  public:
  void unsafe_arena_set_allocated_historical_data(
      ::Jde::Markets::Proto::Requests::RequestHistoricalData* historical_data);
  ::Jde::Markets::Proto::Requests::RequestHistoricalData* unsafe_arena_release_historical_data();

  // .Jde.Markets.Proto.Requests.FlexExecutions flex_executions = 9;
  bool has_flex_executions() const;
  private:
  bool _internal_has_flex_executions() const;
  public:
  void clear_flex_executions();
  const ::Jde::Markets::Proto::Requests::FlexExecutions& flex_executions() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::FlexExecutions* release_flex_executions();
  ::Jde::Markets::Proto::Requests::FlexExecutions* mutable_flex_executions();
  void set_allocated_flex_executions(::Jde::Markets::Proto::Requests::FlexExecutions* flex_executions);
  private:
  const ::Jde::Markets::Proto::Requests::FlexExecutions& _internal_flex_executions() const;
  ::Jde::Markets::Proto::Requests::FlexExecutions* _internal_mutable_flex_executions();
  public:
  void unsafe_arena_set_allocated_flex_executions(
      ::Jde::Markets::Proto::Requests::FlexExecutions* flex_executions);
  ::Jde::Markets::Proto::Requests::FlexExecutions* unsafe_arena_release_flex_executions();

  // .Jde.Markets.Proto.Requests.PlaceOrder place_order = 10;
  bool has_place_order() const;
  private:
  bool _internal_has_place_order() const;
  public:
  void clear_place_order();
  const ::Jde::Markets::Proto::Requests::PlaceOrder& place_order() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::PlaceOrder* release_place_order();
  ::Jde::Markets::Proto::Requests::PlaceOrder* mutable_place_order();
  void set_allocated_place_order(::Jde::Markets::Proto::Requests::PlaceOrder* place_order);
  private:
  const ::Jde::Markets::Proto::Requests::PlaceOrder& _internal_place_order() const;
  ::Jde::Markets::Proto::Requests::PlaceOrder* _internal_mutable_place_order();
  public:
  void unsafe_arena_set_allocated_place_order(
      ::Jde::Markets::Proto::Requests::PlaceOrder* place_order);
  ::Jde::Markets::Proto::Requests::PlaceOrder* unsafe_arena_release_place_order();

  // .Jde.Markets.Proto.Requests.RequestPositions request_positions = 11;
  bool has_request_positions() const;
  private:
  bool _internal_has_request_positions() const;
  public:
  void clear_request_positions();
  const ::Jde::Markets::Proto::Requests::RequestPositions& request_positions() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestPositions* release_request_positions();
  ::Jde::Markets::Proto::Requests::RequestPositions* mutable_request_positions();
  void set_allocated_request_positions(::Jde::Markets::Proto::Requests::RequestPositions* request_positions);
  private:
  const ::Jde::Markets::Proto::Requests::RequestPositions& _internal_request_positions() const;
  ::Jde::Markets::Proto::Requests::RequestPositions* _internal_mutable_request_positions();
  public:
  void unsafe_arena_set_allocated_request_positions(
      ::Jde::Markets::Proto::Requests::RequestPositions* request_positions);
  ::Jde::Markets::Proto::Requests::RequestPositions* unsafe_arena_release_request_positions();

  // .Jde.Markets.Proto.Requests.RequestExecutions request_executions = 12;
  bool has_request_executions() const;
  private:
  bool _internal_has_request_executions() const;
  public:
  void clear_request_executions();
  const ::Jde::Markets::Proto::Requests::RequestExecutions& request_executions() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::RequestExecutions* release_request_executions();
  ::Jde::Markets::Proto::Requests::RequestExecutions* mutable_request_executions();
  void set_allocated_request_executions(::Jde::Markets::Proto::Requests::RequestExecutions* request_executions);
  private:
  const ::Jde::Markets::Proto::Requests::RequestExecutions& _internal_request_executions() const;
  ::Jde::Markets::Proto::Requests::RequestExecutions* _internal_mutable_request_executions();
  public:
  void unsafe_arena_set_allocated_request_executions(
      ::Jde::Markets::Proto::Requests::RequestExecutions* request_executions);
  ::Jde::Markets::Proto::Requests::RequestExecutions* unsafe_arena_release_request_executions();

  // .Jde.Markets.Proto.Requests.StringRequest string_request = 13;
  bool has_string_request() const;
  private:
  bool _internal_has_string_request() const;
  public:
  void clear_string_request();
  const ::Jde::Markets::Proto::Requests::StringRequest& string_request() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::StringRequest* release_string_request();
  ::Jde::Markets::Proto::Requests::StringRequest* mutable_string_request();
  void set_allocated_string_request(::Jde::Markets::Proto::Requests::StringRequest* string_request);
  private:
  const ::Jde::Markets::Proto::Requests::StringRequest& _internal_string_request() const;
  ::Jde::Markets::Proto::Requests::StringRequest* _internal_mutable_string_request();
  public:
  void unsafe_arena_set_allocated_string_request(
      ::Jde::Markets::Proto::Requests::StringRequest* string_request);
  ::Jde::Markets::Proto::Requests::StringRequest* unsafe_arena_release_string_request();

  // .Jde.Markets.Proto.Requests.EditWatchListRequest edit_watch_list = 14;
  bool has_edit_watch_list() const;
  private:
  bool _internal_has_edit_watch_list() const;
  public:
  void clear_edit_watch_list();
  const ::Jde::Markets::Proto::Requests::EditWatchListRequest& edit_watch_list() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::EditWatchListRequest* release_edit_watch_list();
  ::Jde::Markets::Proto::Requests::EditWatchListRequest* mutable_edit_watch_list();
  void set_allocated_edit_watch_list(::Jde::Markets::Proto::Requests::EditWatchListRequest* edit_watch_list);
  private:
  const ::Jde::Markets::Proto::Requests::EditWatchListRequest& _internal_edit_watch_list() const;
  ::Jde::Markets::Proto::Requests::EditWatchListRequest* _internal_mutable_edit_watch_list();
  public:
  void unsafe_arena_set_allocated_edit_watch_list(
      ::Jde::Markets::Proto::Requests::EditWatchListRequest* edit_watch_list);
  ::Jde::Markets::Proto::Requests::EditWatchListRequest* unsafe_arena_release_edit_watch_list();

  // .Jde.Markets.Proto.Requests.NewsArticleRequest news_article_request = 15;
  bool has_news_article_request() const;
  private:
  bool _internal_has_news_article_request() const;
  public:
  void clear_news_article_request();
  const ::Jde::Markets::Proto::Requests::NewsArticleRequest& news_article_request() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::NewsArticleRequest* release_news_article_request();
  ::Jde::Markets::Proto::Requests::NewsArticleRequest* mutable_news_article_request();
  void set_allocated_news_article_request(::Jde::Markets::Proto::Requests::NewsArticleRequest* news_article_request);
  private:
  const ::Jde::Markets::Proto::Requests::NewsArticleRequest& _internal_news_article_request() const;
  ::Jde::Markets::Proto::Requests::NewsArticleRequest* _internal_mutable_news_article_request();
  public:
  void unsafe_arena_set_allocated_news_article_request(
      ::Jde::Markets::Proto::Requests::NewsArticleRequest* news_article_request);
  ::Jde::Markets::Proto::Requests::NewsArticleRequest* unsafe_arena_release_news_article_request();

  // .Jde.Markets.Proto.Requests.HistoricalNewsRequest historical_news_request = 16;
  bool has_historical_news_request() const;
  private:
  bool _internal_has_historical_news_request() const;
  public:
  void clear_historical_news_request();
  const ::Jde::Markets::Proto::Requests::HistoricalNewsRequest& historical_news_request() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* release_historical_news_request();
  ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* mutable_historical_news_request();
  void set_allocated_historical_news_request(::Jde::Markets::Proto::Requests::HistoricalNewsRequest* historical_news_request);
  private:
  const ::Jde::Markets::Proto::Requests::HistoricalNewsRequest& _internal_historical_news_request() const;
  ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* _internal_mutable_historical_news_request();
  public:
  void unsafe_arena_set_allocated_historical_news_request(
      ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* historical_news_request);
  ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* unsafe_arena_release_historical_news_request();

  // .Jde.Markets.Proto.Requests.StdDevRequest std_dev = 17;
  bool has_std_dev() const;
  private:
  bool _internal_has_std_dev() const;
  public:
  void clear_std_dev();
  const ::Jde::Markets::Proto::Requests::StdDevRequest& std_dev() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::StdDevRequest* release_std_dev();
  ::Jde::Markets::Proto::Requests::StdDevRequest* mutable_std_dev();
  void set_allocated_std_dev(::Jde::Markets::Proto::Requests::StdDevRequest* std_dev);
  private:
  const ::Jde::Markets::Proto::Requests::StdDevRequest& _internal_std_dev() const;
  ::Jde::Markets::Proto::Requests::StdDevRequest* _internal_mutable_std_dev();
  public:
  void unsafe_arena_set_allocated_std_dev(
      ::Jde::Markets::Proto::Requests::StdDevRequest* std_dev);
  ::Jde::Markets::Proto::Requests::StdDevRequest* unsafe_arena_release_std_dev();

  // .Jde.Markets.Proto.Requests.ImpliedVolatilityRequest implied_volatility = 18;
  bool has_implied_volatility() const;
  private:
  bool _internal_has_implied_volatility() const;
  public:
  void clear_implied_volatility();
  const ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest& implied_volatility() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* release_implied_volatility();
  ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* mutable_implied_volatility();
  void set_allocated_implied_volatility(::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* implied_volatility);
  private:
  const ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest& _internal_implied_volatility() const;
  ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* _internal_mutable_implied_volatility();
  public:
  void unsafe_arena_set_allocated_implied_volatility(
      ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* implied_volatility);
  ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* unsafe_arena_release_implied_volatility();

  // .Jde.Markets.Proto.Requests.ImpliedPriceRequest implied_price = 19;
  bool has_implied_price() const;
  private:
  bool _internal_has_implied_price() const;
  public:
  void clear_implied_price();
  const ::Jde::Markets::Proto::Requests::ImpliedPriceRequest& implied_price() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* release_implied_price();
  ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* mutable_implied_price();
  void set_allocated_implied_price(::Jde::Markets::Proto::Requests::ImpliedPriceRequest* implied_price);
  private:
  const ::Jde::Markets::Proto::Requests::ImpliedPriceRequest& _internal_implied_price() const;
  ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* _internal_mutable_implied_price();
  public:
  void unsafe_arena_set_allocated_implied_price(
      ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* implied_price);
  ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* unsafe_arena_release_implied_price();

  // .Jde.Markets.Proto.Requests.Custom blockly = 20;
  bool has_blockly() const;
  private:
  bool _internal_has_blockly() const;
  public:
  void clear_blockly();
  const ::Jde::Markets::Proto::Requests::Custom& blockly() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::Jde::Markets::Proto::Requests::Custom* release_blockly();
  ::Jde::Markets::Proto::Requests::Custom* mutable_blockly();
  void set_allocated_blockly(::Jde::Markets::Proto::Requests::Custom* blockly);
  private:
  const ::Jde::Markets::Proto::Requests::Custom& _internal_blockly() const;
  ::Jde::Markets::Proto::Requests::Custom* _internal_mutable_blockly();
  public:
  void unsafe_arena_set_allocated_blockly(
      ::Jde::Markets::Proto::Requests::Custom* blockly);
  ::Jde::Markets::Proto::Requests::Custom* unsafe_arena_release_blockly();

  void clear_Value();
  ValueCase Value_case() const;
  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestUnion)
 private:
  class _Internal;
  void set_has_account_updates();
  void set_has_account_updates_multi();
  void set_has_contract_details();
  void set_has_generic_requests();
  void set_has_market_data_smart();
  void set_has_options();
  void set_has_historical_data();
  void set_has_flex_executions();
  void set_has_place_order();
  void set_has_request_positions();
  void set_has_request_executions();
  void set_has_string_request();
  void set_has_edit_watch_list();
  void set_has_news_article_request();
  void set_has_historical_news_request();
  void set_has_std_dev();
  void set_has_implied_volatility();
  void set_has_implied_price();
  void set_has_blockly();

  inline bool has_Value() const;
  inline void clear_has_Value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ValueUnion {
    constexpr ValueUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::Jde::Markets::Proto::Requests::RequestAccountUpdates* account_updates_;
    ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* account_updates_multi_;
    ::Jde::Markets::Proto::Requests::RequestContractDetails* contract_details_;
    ::Jde::Markets::Proto::Requests::GenericRequests* generic_requests_;
    ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* market_data_smart_;
    ::Jde::Markets::Proto::Requests::RequestOptions* options_;
    ::Jde::Markets::Proto::Requests::RequestHistoricalData* historical_data_;
    ::Jde::Markets::Proto::Requests::FlexExecutions* flex_executions_;
    ::Jde::Markets::Proto::Requests::PlaceOrder* place_order_;
    ::Jde::Markets::Proto::Requests::RequestPositions* request_positions_;
    ::Jde::Markets::Proto::Requests::RequestExecutions* request_executions_;
    ::Jde::Markets::Proto::Requests::StringRequest* string_request_;
    ::Jde::Markets::Proto::Requests::EditWatchListRequest* edit_watch_list_;
    ::Jde::Markets::Proto::Requests::NewsArticleRequest* news_article_request_;
    ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* historical_news_request_;
    ::Jde::Markets::Proto::Requests::StdDevRequest* std_dev_;
    ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* implied_volatility_;
    ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* implied_price_;
    ::Jde::Markets::Proto::Requests::Custom* blockly_;
  } Value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT NewsArticleRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.NewsArticleRequest) */ {
 public:
  inline NewsArticleRequest() : NewsArticleRequest(nullptr) {}
  ~NewsArticleRequest() override;
  explicit constexpr NewsArticleRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  NewsArticleRequest(const NewsArticleRequest& from);
  NewsArticleRequest(NewsArticleRequest&& from) noexcept
    : NewsArticleRequest() {
    *this = ::std::move(from);
  }

  inline NewsArticleRequest& operator=(const NewsArticleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewsArticleRequest& operator=(NewsArticleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewsArticleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewsArticleRequest* internal_default_instance() {
    return reinterpret_cast<const NewsArticleRequest*>(
               &_NewsArticleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(NewsArticleRequest& a, NewsArticleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(NewsArticleRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewsArticleRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline NewsArticleRequest* New() const final {
    return new NewsArticleRequest();
  }

  NewsArticleRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<NewsArticleRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const NewsArticleRequest& from);
  void MergeFrom(const NewsArticleRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewsArticleRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.NewsArticleRequest";
  }
  protected:
  explicit NewsArticleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderCodeFieldNumber = 2,
    kArticleIdFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // string provider_code = 2;
  void clear_provider_code();
  const std::string& provider_code() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_provider_code(ArgT0&& arg0, ArgT... args);
  std::string* mutable_provider_code();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_provider_code();
  void set_allocated_provider_code(std::string* provider_code);
  private:
  const std::string& _internal_provider_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_provider_code(const std::string& value);
  std::string* _internal_mutable_provider_code();
  public:

  // string article_id = 3;
  void clear_article_id();
  const std::string& article_id() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_article_id(ArgT0&& arg0, ArgT... args);
  std::string* mutable_article_id();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_article_id();
  void set_allocated_article_id(std::string* article_id);
  private:
  const std::string& _internal_article_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_article_id(const std::string& value);
  std::string* _internal_mutable_article_id();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.NewsArticleRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr provider_code_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr article_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT HistoricalNewsRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.HistoricalNewsRequest) */ {
 public:
  inline HistoricalNewsRequest() : HistoricalNewsRequest(nullptr) {}
  ~HistoricalNewsRequest() override;
  explicit constexpr HistoricalNewsRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  HistoricalNewsRequest(const HistoricalNewsRequest& from);
  HistoricalNewsRequest(HistoricalNewsRequest&& from) noexcept
    : HistoricalNewsRequest() {
    *this = ::std::move(from);
  }

  inline HistoricalNewsRequest& operator=(const HistoricalNewsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HistoricalNewsRequest& operator=(HistoricalNewsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HistoricalNewsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HistoricalNewsRequest* internal_default_instance() {
    return reinterpret_cast<const HistoricalNewsRequest*>(
               &_HistoricalNewsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(HistoricalNewsRequest& a, HistoricalNewsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HistoricalNewsRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HistoricalNewsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HistoricalNewsRequest* New() const final {
    return new HistoricalNewsRequest();
  }

  HistoricalNewsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HistoricalNewsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HistoricalNewsRequest& from);
  void MergeFrom(const HistoricalNewsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HistoricalNewsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.HistoricalNewsRequest";
  }
  protected:
  explicit HistoricalNewsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProviderCodesFieldNumber = 3,
    kIdFieldNumber = 1,
    kContractIdFieldNumber = 2,
    kTotalResultsFieldNumber = 4,
    kStartFieldNumber = 5,
    kEndFieldNumber = 6,
  };
  // repeated string provider_codes = 3;
  int provider_codes_size() const;
  private:
  int _internal_provider_codes_size() const;
  public:
  void clear_provider_codes();
  const std::string& provider_codes(int index) const;
  std::string* mutable_provider_codes(int index);
  void set_provider_codes(int index, const std::string& value);
  void set_provider_codes(int index, std::string&& value);
  void set_provider_codes(int index, const char* value);
  void set_provider_codes(int index, const char* value, size_t size);
  std::string* add_provider_codes();
  void add_provider_codes(const std::string& value);
  void add_provider_codes(std::string&& value);
  void add_provider_codes(const char* value);
  void add_provider_codes(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& provider_codes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_provider_codes();
  private:
  const std::string& _internal_provider_codes(int index) const;
  std::string* _internal_add_provider_codes();
  public:

  // uint32 id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 contract_id = 2;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 total_results = 4;
  void clear_total_results();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results() const;
  void set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_results() const;
  void _internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 start = 5;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 end = 6;
  void clear_end();
  ::PROTOBUF_NAMESPACE_ID::uint32 end() const;
  void set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end() const;
  void _internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.HistoricalNewsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> provider_codes_;
  ::PROTOBUF_NAMESPACE_ID::uint32 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_results_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT RequestTransmission final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Requests.RequestTransmission) */ {
 public:
  inline RequestTransmission() : RequestTransmission(nullptr) {}
  ~RequestTransmission() override;
  explicit constexpr RequestTransmission(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  RequestTransmission(const RequestTransmission& from);
  RequestTransmission(RequestTransmission&& from) noexcept
    : RequestTransmission() {
    *this = ::std::move(from);
  }

  inline RequestTransmission& operator=(const RequestTransmission& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequestTransmission& operator=(RequestTransmission&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequestTransmission& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequestTransmission* internal_default_instance() {
    return reinterpret_cast<const RequestTransmission*>(
               &_RequestTransmission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(RequestTransmission& a, RequestTransmission& b) {
    a.Swap(&b);
  }
  inline void Swap(RequestTransmission* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequestTransmission* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RequestTransmission* New() const final {
    return new RequestTransmission();
  }

  RequestTransmission* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RequestTransmission>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RequestTransmission& from);
  void MergeFrom(const RequestTransmission& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RequestTransmission* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Requests.RequestTransmission";
  }
  protected:
  explicit RequestTransmission(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessagesFieldNumber = 1,
  };
  // repeated .Jde.Markets.Proto.Requests.RequestUnion messages = 1;
  int messages_size() const;
  private:
  int _internal_messages_size() const;
  public:
  void clear_messages();
  ::Jde::Markets::Proto::Requests::RequestUnion* mutable_messages(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::RequestUnion >*
      mutable_messages();
  private:
  const ::Jde::Markets::Proto::Requests::RequestUnion& _internal_messages(int index) const;
  ::Jde::Markets::Proto::Requests::RequestUnion* _internal_add_messages();
  public:
  const ::Jde::Markets::Proto::Requests::RequestUnion& messages(int index) const;
  ::Jde::Markets::Proto::Requests::RequestUnion* add_messages();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::RequestUnion >&
      messages() const;

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Requests.RequestTransmission)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::RequestUnion > messages_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_requests_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GenericRequests

// uint32 id = 1;
inline void GenericRequests::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenericRequests::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GenericRequests::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.GenericRequests.id)
  return _internal_id();
}
inline void GenericRequests::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void GenericRequests::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.GenericRequests.id)
}

// .Jde.Markets.Proto.Requests.ERequests type = 2;
inline void GenericRequests::clear_type() {
  type_ = 0;
}
inline ::Jde::Markets::Proto::Requests::ERequests GenericRequests::_internal_type() const {
  return static_cast< ::Jde::Markets::Proto::Requests::ERequests >(type_);
}
inline ::Jde::Markets::Proto::Requests::ERequests GenericRequests::type() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.GenericRequests.type)
  return _internal_type();
}
inline void GenericRequests::_internal_set_type(::Jde::Markets::Proto::Requests::ERequests value) {
  
  type_ = value;
}
inline void GenericRequests::set_type(::Jde::Markets::Proto::Requests::ERequests value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.GenericRequests.type)
}

// repeated int32 ids = 3;
inline int GenericRequests::_internal_ids_size() const {
  return ids_.size();
}
inline int GenericRequests::ids_size() const {
  return _internal_ids_size();
}
inline void GenericRequests::clear_ids() {
  ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GenericRequests::_internal_ids(int index) const {
  return ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GenericRequests::ids(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.GenericRequests.ids)
  return _internal_ids(index);
}
inline void GenericRequests::set_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.GenericRequests.ids)
}
inline void GenericRequests::_internal_add_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  ids_.Add(value);
}
inline void GenericRequests::add_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_ids(value);
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.GenericRequests.ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GenericRequests::_internal_ids() const {
  return ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
GenericRequests::ids() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.GenericRequests.ids)
  return _internal_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GenericRequests::_internal_mutable_ids() {
  return &ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
GenericRequests::mutable_ids() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.GenericRequests.ids)
  return _internal_mutable_ids();
}

// -------------------------------------------------------------------

// StdDevRequest

// uint32 id = 1;
inline void StdDevRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StdDevRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StdDevRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StdDevRequest.id)
  return _internal_id();
}
inline void StdDevRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void StdDevRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StdDevRequest.id)
}

// int32 contract_id = 2;
inline void StdDevRequest::clear_contract_id() {
  contract_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StdDevRequest::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StdDevRequest::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StdDevRequest.contract_id)
  return _internal_contract_id();
}
inline void StdDevRequest::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contract_id_ = value;
}
inline void StdDevRequest::set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StdDevRequest.contract_id)
}

// uint32 start = 3;
inline void StdDevRequest::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StdDevRequest::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StdDevRequest::start() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StdDevRequest.start)
  return _internal_start();
}
inline void StdDevRequest::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void StdDevRequest::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StdDevRequest.start)
}

// double days = 4;
inline void StdDevRequest::clear_days() {
  days_ = 0;
}
inline double StdDevRequest::_internal_days() const {
  return days_;
}
inline double StdDevRequest::days() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StdDevRequest.days)
  return _internal_days();
}
inline void StdDevRequest::_internal_set_days(double value) {
  
  days_ = value;
}
inline void StdDevRequest::set_days(double value) {
  _internal_set_days(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StdDevRequest.days)
}

// -------------------------------------------------------------------

// StringRequest

// uint32 id = 1;
inline void StringRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StringRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 StringRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StringRequest.id)
  return _internal_id();
}
inline void StringRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void StringRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StringRequest.id)
}

// .Jde.Markets.Proto.Requests.ERequests type = 2;
inline void StringRequest::clear_type() {
  type_ = 0;
}
inline ::Jde::Markets::Proto::Requests::ERequests StringRequest::_internal_type() const {
  return static_cast< ::Jde::Markets::Proto::Requests::ERequests >(type_);
}
inline ::Jde::Markets::Proto::Requests::ERequests StringRequest::type() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StringRequest.type)
  return _internal_type();
}
inline void StringRequest::_internal_set_type(::Jde::Markets::Proto::Requests::ERequests value) {
  
  type_ = value;
}
inline void StringRequest::set_type(::Jde::Markets::Proto::Requests::ERequests value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StringRequest.type)
}

// string name = 3;
inline void StringRequest::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& StringRequest::name() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.StringRequest.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void StringRequest::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.StringRequest.name)
}
inline std::string* StringRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.StringRequest.name)
  return _internal_mutable_name();
}
inline const std::string& StringRequest::_internal_name() const {
  return name_.Get();
}
inline void StringRequest::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* StringRequest::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* StringRequest::release_name() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.StringRequest.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void StringRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.StringRequest.name)
}

// -------------------------------------------------------------------

// EditWatchListRequest

// uint32 id = 1;
inline void EditWatchListRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EditWatchListRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 EditWatchListRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.EditWatchListRequest.id)
  return _internal_id();
}
inline void EditWatchListRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void EditWatchListRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.EditWatchListRequest.id)
}

// .Jde.Markets.Proto.Watch.File file = 2;
inline bool EditWatchListRequest::_internal_has_file() const {
  return this != internal_default_instance() && file_ != nullptr;
}
inline bool EditWatchListRequest::has_file() const {
  return _internal_has_file();
}
inline const ::Jde::Markets::Proto::Watch::File& EditWatchListRequest::_internal_file() const {
  const ::Jde::Markets::Proto::Watch::File* p = file_;
  return p != nullptr ? *p : reinterpret_cast<const ::Jde::Markets::Proto::Watch::File&>(
      ::Jde::Markets::Proto::Watch::_File_default_instance_);
}
inline const ::Jde::Markets::Proto::Watch::File& EditWatchListRequest::file() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.EditWatchListRequest.file)
  return _internal_file();
}
inline void EditWatchListRequest::unsafe_arena_set_allocated_file(
    ::Jde::Markets::Proto::Watch::File* file) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(file_);
  }
  file_ = file;
  if (file) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.EditWatchListRequest.file)
}
inline ::Jde::Markets::Proto::Watch::File* EditWatchListRequest::release_file() {
  
  ::Jde::Markets::Proto::Watch::File* temp = file_;
  file_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Jde::Markets::Proto::Watch::File* EditWatchListRequest::unsafe_arena_release_file() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.EditWatchListRequest.file)
  
  ::Jde::Markets::Proto::Watch::File* temp = file_;
  file_ = nullptr;
  return temp;
}
inline ::Jde::Markets::Proto::Watch::File* EditWatchListRequest::_internal_mutable_file() {
  
  if (file_ == nullptr) {
    auto* p = CreateMaybeMessage<::Jde::Markets::Proto::Watch::File>(GetArenaForAllocation());
    file_ = p;
  }
  return file_;
}
inline ::Jde::Markets::Proto::Watch::File* EditWatchListRequest::mutable_file() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.EditWatchListRequest.file)
  return _internal_mutable_file();
}
inline void EditWatchListRequest::set_allocated_file(::Jde::Markets::Proto::Watch::File* file) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(file_);
  }
  if (file) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(file));
    if (message_arena != submessage_arena) {
      file = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    
  } else {
    
  }
  file_ = file;
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.EditWatchListRequest.file)
}

// -------------------------------------------------------------------

// RequestAccountUpdates

// bool subscribe = 1;
inline void RequestAccountUpdates::clear_subscribe() {
  subscribe_ = false;
}
inline bool RequestAccountUpdates::_internal_subscribe() const {
  return subscribe_;
}
inline bool RequestAccountUpdates::subscribe() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdates.subscribe)
  return _internal_subscribe();
}
inline void RequestAccountUpdates::_internal_set_subscribe(bool value) {
  
  subscribe_ = value;
}
inline void RequestAccountUpdates::set_subscribe(bool value) {
  _internal_set_subscribe(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdates.subscribe)
}

// string account_number = 2;
inline void RequestAccountUpdates::clear_account_number() {
  account_number_.ClearToEmpty();
}
inline const std::string& RequestAccountUpdates::account_number() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdates.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestAccountUpdates::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdates.account_number)
}
inline std::string* RequestAccountUpdates::mutable_account_number() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestAccountUpdates.account_number)
  return _internal_mutable_account_number();
}
inline const std::string& RequestAccountUpdates::_internal_account_number() const {
  return account_number_.Get();
}
inline void RequestAccountUpdates::_internal_set_account_number(const std::string& value) {
  
  account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdates::_internal_mutable_account_number() {
  
  return account_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdates::release_account_number() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestAccountUpdates.account_number)
  return account_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestAccountUpdates::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  account_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_number,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestAccountUpdates.account_number)
}

// -------------------------------------------------------------------

// RequestAccountUpdatesMulti

// uint32 id = 1;
inline void RequestAccountUpdatesMulti::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestAccountUpdatesMulti::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestAccountUpdatesMulti::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.id)
  return _internal_id();
}
inline void RequestAccountUpdatesMulti::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestAccountUpdatesMulti::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.id)
}

// string account_number = 2;
inline void RequestAccountUpdatesMulti::clear_account_number() {
  account_number_.ClearToEmpty();
}
inline const std::string& RequestAccountUpdatesMulti::account_number() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestAccountUpdatesMulti::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.account_number)
}
inline std::string* RequestAccountUpdatesMulti::mutable_account_number() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.account_number)
  return _internal_mutable_account_number();
}
inline const std::string& RequestAccountUpdatesMulti::_internal_account_number() const {
  return account_number_.Get();
}
inline void RequestAccountUpdatesMulti::_internal_set_account_number(const std::string& value) {
  
  account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdatesMulti::_internal_mutable_account_number() {
  
  return account_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdatesMulti::release_account_number() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.account_number)
  return account_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestAccountUpdatesMulti::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  account_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_number,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.account_number)
}

// string model_code = 3;
inline void RequestAccountUpdatesMulti::clear_model_code() {
  model_code_.ClearToEmpty();
}
inline const std::string& RequestAccountUpdatesMulti::model_code() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.model_code)
  return _internal_model_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestAccountUpdatesMulti::set_model_code(ArgT0&& arg0, ArgT... args) {
 
 model_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.model_code)
}
inline std::string* RequestAccountUpdatesMulti::mutable_model_code() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.model_code)
  return _internal_mutable_model_code();
}
inline const std::string& RequestAccountUpdatesMulti::_internal_model_code() const {
  return model_code_.Get();
}
inline void RequestAccountUpdatesMulti::_internal_set_model_code(const std::string& value) {
  
  model_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdatesMulti::_internal_mutable_model_code() {
  
  return model_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestAccountUpdatesMulti::release_model_code() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.model_code)
  return model_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestAccountUpdatesMulti::set_allocated_model_code(std::string* model_code) {
  if (model_code != nullptr) {
    
  } else {
    
  }
  model_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.model_code)
}

// bool ledger_and_nlv = 4;
inline void RequestAccountUpdatesMulti::clear_ledger_and_nlv() {
  ledger_and_nlv_ = false;
}
inline bool RequestAccountUpdatesMulti::_internal_ledger_and_nlv() const {
  return ledger_and_nlv_;
}
inline bool RequestAccountUpdatesMulti::ledger_and_nlv() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.ledger_and_nlv)
  return _internal_ledger_and_nlv();
}
inline void RequestAccountUpdatesMulti::_internal_set_ledger_and_nlv(bool value) {
  
  ledger_and_nlv_ = value;
}
inline void RequestAccountUpdatesMulti::set_ledger_and_nlv(bool value) {
  _internal_set_ledger_and_nlv(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti.ledger_and_nlv)
}

// -------------------------------------------------------------------

// RequestPositions

// uint32 id = 1;
inline void RequestPositions::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestPositions::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestPositions::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestPositions.id)
  return _internal_id();
}
inline void RequestPositions::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestPositions::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestPositions.id)
}

// string account_number = 2;
inline void RequestPositions::clear_account_number() {
  account_number_.ClearToEmpty();
}
inline const std::string& RequestPositions::account_number() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestPositions.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestPositions::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestPositions.account_number)
}
inline std::string* RequestPositions::mutable_account_number() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestPositions.account_number)
  return _internal_mutable_account_number();
}
inline const std::string& RequestPositions::_internal_account_number() const {
  return account_number_.Get();
}
inline void RequestPositions::_internal_set_account_number(const std::string& value) {
  
  account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestPositions::_internal_mutable_account_number() {
  
  return account_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestPositions::release_account_number() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestPositions.account_number)
  return account_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestPositions::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  account_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_number,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestPositions.account_number)
}

// string model_code = 3;
inline void RequestPositions::clear_model_code() {
  model_code_.ClearToEmpty();
}
inline const std::string& RequestPositions::model_code() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestPositions.model_code)
  return _internal_model_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestPositions::set_model_code(ArgT0&& arg0, ArgT... args) {
 
 model_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestPositions.model_code)
}
inline std::string* RequestPositions::mutable_model_code() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestPositions.model_code)
  return _internal_mutable_model_code();
}
inline const std::string& RequestPositions::_internal_model_code() const {
  return model_code_.Get();
}
inline void RequestPositions::_internal_set_model_code(const std::string& value) {
  
  model_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestPositions::_internal_mutable_model_code() {
  
  return model_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestPositions::release_model_code() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestPositions.model_code)
  return model_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestPositions::set_allocated_model_code(std::string* model_code) {
  if (model_code != nullptr) {
    
  } else {
    
  }
  model_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), model_code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestPositions.model_code)
}

// -------------------------------------------------------------------

// ImpliedVolatility

// int32 contract_id = 1;
inline void ImpliedVolatility::clear_contract_id() {
  contract_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ImpliedVolatility::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ImpliedVolatility::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedVolatility.contract_id)
  return _internal_contract_id();
}
inline void ImpliedVolatility::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contract_id_ = value;
}
inline void ImpliedVolatility::set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedVolatility.contract_id)
}

// double option_price = 2;
inline void ImpliedVolatility::clear_option_price() {
  option_price_ = 0;
}
inline double ImpliedVolatility::_internal_option_price() const {
  return option_price_;
}
inline double ImpliedVolatility::option_price() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedVolatility.option_price)
  return _internal_option_price();
}
inline void ImpliedVolatility::_internal_set_option_price(double value) {
  
  option_price_ = value;
}
inline void ImpliedVolatility::set_option_price(double value) {
  _internal_set_option_price(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedVolatility.option_price)
}

// double underlying_price = 3;
inline void ImpliedVolatility::clear_underlying_price() {
  underlying_price_ = 0;
}
inline double ImpliedVolatility::_internal_underlying_price() const {
  return underlying_price_;
}
inline double ImpliedVolatility::underlying_price() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedVolatility.underlying_price)
  return _internal_underlying_price();
}
inline void ImpliedVolatility::_internal_set_underlying_price(double value) {
  
  underlying_price_ = value;
}
inline void ImpliedVolatility::set_underlying_price(double value) {
  _internal_set_underlying_price(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedVolatility.underlying_price)
}

// -------------------------------------------------------------------

// ImpliedVolatilityRequest

// uint32 id = 1;
inline void ImpliedVolatilityRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImpliedVolatilityRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImpliedVolatilityRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.id)
  return _internal_id();
}
inline void ImpliedVolatilityRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void ImpliedVolatilityRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.id)
}

// repeated .Jde.Markets.Proto.Requests.ImpliedVolatility contracts = 2;
inline int ImpliedVolatilityRequest::_internal_contracts_size() const {
  return contracts_.size();
}
inline int ImpliedVolatilityRequest::contracts_size() const {
  return _internal_contracts_size();
}
inline void ImpliedVolatilityRequest::clear_contracts() {
  contracts_.Clear();
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatility* ImpliedVolatilityRequest::mutable_contracts(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.contracts)
  return contracts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedVolatility >*
ImpliedVolatilityRequest::mutable_contracts() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.contracts)
  return &contracts_;
}
inline const ::Jde::Markets::Proto::Requests::ImpliedVolatility& ImpliedVolatilityRequest::_internal_contracts(int index) const {
  return contracts_.Get(index);
}
inline const ::Jde::Markets::Proto::Requests::ImpliedVolatility& ImpliedVolatilityRequest::contracts(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.contracts)
  return _internal_contracts(index);
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatility* ImpliedVolatilityRequest::_internal_add_contracts() {
  return contracts_.Add();
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatility* ImpliedVolatilityRequest::add_contracts() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.contracts)
  return _internal_add_contracts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedVolatility >&
ImpliedVolatilityRequest::contracts() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.ImpliedVolatilityRequest.contracts)
  return contracts_;
}

// -------------------------------------------------------------------

// ImpliedPrice

// int32 contract_id = 1;
inline void ImpliedPrice::clear_contract_id() {
  contract_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ImpliedPrice::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ImpliedPrice::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedPrice.contract_id)
  return _internal_contract_id();
}
inline void ImpliedPrice::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contract_id_ = value;
}
inline void ImpliedPrice::set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedPrice.contract_id)
}

// double volatility = 2;
inline void ImpliedPrice::clear_volatility() {
  volatility_ = 0;
}
inline double ImpliedPrice::_internal_volatility() const {
  return volatility_;
}
inline double ImpliedPrice::volatility() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedPrice.volatility)
  return _internal_volatility();
}
inline void ImpliedPrice::_internal_set_volatility(double value) {
  
  volatility_ = value;
}
inline void ImpliedPrice::set_volatility(double value) {
  _internal_set_volatility(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedPrice.volatility)
}

// double underlying_price = 3;
inline void ImpliedPrice::clear_underlying_price() {
  underlying_price_ = 0;
}
inline double ImpliedPrice::_internal_underlying_price() const {
  return underlying_price_;
}
inline double ImpliedPrice::underlying_price() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedPrice.underlying_price)
  return _internal_underlying_price();
}
inline void ImpliedPrice::_internal_set_underlying_price(double value) {
  
  underlying_price_ = value;
}
inline void ImpliedPrice::set_underlying_price(double value) {
  _internal_set_underlying_price(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedPrice.underlying_price)
}

// -------------------------------------------------------------------

// ImpliedPriceRequest

// uint32 id = 1;
inline void ImpliedPriceRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImpliedPriceRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImpliedPriceRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedPriceRequest.id)
  return _internal_id();
}
inline void ImpliedPriceRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void ImpliedPriceRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.ImpliedPriceRequest.id)
}

// repeated .Jde.Markets.Proto.Requests.ImpliedPrice contracts = 2;
inline int ImpliedPriceRequest::_internal_contracts_size() const {
  return contracts_.size();
}
inline int ImpliedPriceRequest::contracts_size() const {
  return _internal_contracts_size();
}
inline void ImpliedPriceRequest::clear_contracts() {
  contracts_.Clear();
}
inline ::Jde::Markets::Proto::Requests::ImpliedPrice* ImpliedPriceRequest::mutable_contracts(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.ImpliedPriceRequest.contracts)
  return contracts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedPrice >*
ImpliedPriceRequest::mutable_contracts() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.ImpliedPriceRequest.contracts)
  return &contracts_;
}
inline const ::Jde::Markets::Proto::Requests::ImpliedPrice& ImpliedPriceRequest::_internal_contracts(int index) const {
  return contracts_.Get(index);
}
inline const ::Jde::Markets::Proto::Requests::ImpliedPrice& ImpliedPriceRequest::contracts(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.ImpliedPriceRequest.contracts)
  return _internal_contracts(index);
}
inline ::Jde::Markets::Proto::Requests::ImpliedPrice* ImpliedPriceRequest::_internal_add_contracts() {
  return contracts_.Add();
}
inline ::Jde::Markets::Proto::Requests::ImpliedPrice* ImpliedPriceRequest::add_contracts() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.ImpliedPriceRequest.contracts)
  return _internal_add_contracts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::ImpliedPrice >&
ImpliedPriceRequest::contracts() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.ImpliedPriceRequest.contracts)
  return contracts_;
}

// -------------------------------------------------------------------

// RequestHistoricalData

// uint32 id = 1;
inline void RequestHistoricalData::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestHistoricalData::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestHistoricalData::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.id)
  return _internal_id();
}
inline void RequestHistoricalData::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestHistoricalData::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.id)
}

// .Jde.Markets.Proto.Contract contract = 2;
inline bool RequestHistoricalData::_internal_has_contract() const {
  return this != internal_default_instance() && contract_ != nullptr;
}
inline bool RequestHistoricalData::has_contract() const {
  return _internal_has_contract();
}
inline const ::Jde::Markets::Proto::Contract& RequestHistoricalData::_internal_contract() const {
  const ::Jde::Markets::Proto::Contract* p = contract_;
  return p != nullptr ? *p : reinterpret_cast<const ::Jde::Markets::Proto::Contract&>(
      ::Jde::Markets::Proto::_Contract_default_instance_);
}
inline const ::Jde::Markets::Proto::Contract& RequestHistoricalData::contract() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.contract)
  return _internal_contract();
}
inline void RequestHistoricalData::unsafe_arena_set_allocated_contract(
    ::Jde::Markets::Proto::Contract* contract) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  contract_ = contract;
  if (contract) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestHistoricalData.contract)
}
inline ::Jde::Markets::Proto::Contract* RequestHistoricalData::release_contract() {
  
  ::Jde::Markets::Proto::Contract* temp = contract_;
  contract_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Jde::Markets::Proto::Contract* RequestHistoricalData::unsafe_arena_release_contract() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestHistoricalData.contract)
  
  ::Jde::Markets::Proto::Contract* temp = contract_;
  contract_ = nullptr;
  return temp;
}
inline ::Jde::Markets::Proto::Contract* RequestHistoricalData::_internal_mutable_contract() {
  
  if (contract_ == nullptr) {
    auto* p = CreateMaybeMessage<::Jde::Markets::Proto::Contract>(GetArenaForAllocation());
    contract_ = p;
  }
  return contract_;
}
inline ::Jde::Markets::Proto::Contract* RequestHistoricalData::mutable_contract() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestHistoricalData.contract)
  return _internal_mutable_contract();
}
inline void RequestHistoricalData::set_allocated_contract(::Jde::Markets::Proto::Contract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract));
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    
  } else {
    
  }
  contract_ = contract;
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestHistoricalData.contract)
}

// int32 date = 3;
inline void RequestHistoricalData::clear_date() {
  date_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RequestHistoricalData::_internal_date() const {
  return date_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RequestHistoricalData::date() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.date)
  return _internal_date();
}
inline void RequestHistoricalData::_internal_set_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  date_ = value;
}
inline void RequestHistoricalData::set_date(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_date(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.date)
}

// uint32 days = 4;
inline void RequestHistoricalData::clear_days() {
  days_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestHistoricalData::_internal_days() const {
  return days_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestHistoricalData::days() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.days)
  return _internal_days();
}
inline void RequestHistoricalData::_internal_set_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  days_ = value;
}
inline void RequestHistoricalData::set_days(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_days(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.days)
}

// .Jde.Markets.Proto.Requests.BarSize bar_size = 5;
inline void RequestHistoricalData::clear_bar_size() {
  bar_size_ = 0;
}
inline ::Jde::Markets::Proto::Requests::BarSize RequestHistoricalData::_internal_bar_size() const {
  return static_cast< ::Jde::Markets::Proto::Requests::BarSize >(bar_size_);
}
inline ::Jde::Markets::Proto::Requests::BarSize RequestHistoricalData::bar_size() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.bar_size)
  return _internal_bar_size();
}
inline void RequestHistoricalData::_internal_set_bar_size(::Jde::Markets::Proto::Requests::BarSize value) {
  
  bar_size_ = value;
}
inline void RequestHistoricalData::set_bar_size(::Jde::Markets::Proto::Requests::BarSize value) {
  _internal_set_bar_size(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.bar_size)
}

// .Jde.Markets.Proto.Requests.Display display = 6;
inline void RequestHistoricalData::clear_display() {
  display_ = 0;
}
inline ::Jde::Markets::Proto::Requests::Display RequestHistoricalData::_internal_display() const {
  return static_cast< ::Jde::Markets::Proto::Requests::Display >(display_);
}
inline ::Jde::Markets::Proto::Requests::Display RequestHistoricalData::display() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.display)
  return _internal_display();
}
inline void RequestHistoricalData::_internal_set_display(::Jde::Markets::Proto::Requests::Display value) {
  
  display_ = value;
}
inline void RequestHistoricalData::set_display(::Jde::Markets::Proto::Requests::Display value) {
  _internal_set_display(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.display)
}

// bool use_rth = 7;
inline void RequestHistoricalData::clear_use_rth() {
  use_rth_ = false;
}
inline bool RequestHistoricalData::_internal_use_rth() const {
  return use_rth_;
}
inline bool RequestHistoricalData::use_rth() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.use_rth)
  return _internal_use_rth();
}
inline void RequestHistoricalData::_internal_set_use_rth(bool value) {
  
  use_rth_ = value;
}
inline void RequestHistoricalData::set_use_rth(bool value) {
  _internal_set_use_rth(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.use_rth)
}

// bool keep_up_to_date = 8;
inline void RequestHistoricalData::clear_keep_up_to_date() {
  keep_up_to_date_ = false;
}
inline bool RequestHistoricalData::_internal_keep_up_to_date() const {
  return keep_up_to_date_;
}
inline bool RequestHistoricalData::keep_up_to_date() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestHistoricalData.keep_up_to_date)
  return _internal_keep_up_to_date();
}
inline void RequestHistoricalData::_internal_set_keep_up_to_date(bool value) {
  
  keep_up_to_date_ = value;
}
inline void RequestHistoricalData::set_keep_up_to_date(bool value) {
  _internal_set_keep_up_to_date(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestHistoricalData.keep_up_to_date)
}

// -------------------------------------------------------------------

// RequestMrkDataSmart

// uint32 id = 1;
inline void RequestMrkDataSmart::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestMrkDataSmart::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestMrkDataSmart::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestMrkDataSmart.id)
  return _internal_id();
}
inline void RequestMrkDataSmart::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestMrkDataSmart::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestMrkDataSmart.id)
}

// int32 contract_id = 2;
inline void RequestMrkDataSmart::clear_contract_id() {
  contract_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RequestMrkDataSmart::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 RequestMrkDataSmart::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestMrkDataSmart.contract_id)
  return _internal_contract_id();
}
inline void RequestMrkDataSmart::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  contract_id_ = value;
}
inline void RequestMrkDataSmart::set_contract_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestMrkDataSmart.contract_id)
}

// repeated .Jde.Markets.Proto.Requests.ETickList tick_list = 3;
inline int RequestMrkDataSmart::_internal_tick_list_size() const {
  return tick_list_.size();
}
inline int RequestMrkDataSmart::tick_list_size() const {
  return _internal_tick_list_size();
}
inline void RequestMrkDataSmart::clear_tick_list() {
  tick_list_.Clear();
}
inline ::Jde::Markets::Proto::Requests::ETickList RequestMrkDataSmart::_internal_tick_list(int index) const {
  return static_cast< ::Jde::Markets::Proto::Requests::ETickList >(tick_list_.Get(index));
}
inline ::Jde::Markets::Proto::Requests::ETickList RequestMrkDataSmart::tick_list(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestMrkDataSmart.tick_list)
  return _internal_tick_list(index);
}
inline void RequestMrkDataSmart::set_tick_list(int index, ::Jde::Markets::Proto::Requests::ETickList value) {
  tick_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestMrkDataSmart.tick_list)
}
inline void RequestMrkDataSmart::_internal_add_tick_list(::Jde::Markets::Proto::Requests::ETickList value) {
  tick_list_.Add(value);
}
inline void RequestMrkDataSmart::add_tick_list(::Jde::Markets::Proto::Requests::ETickList value) {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.RequestMrkDataSmart.tick_list)
  _internal_add_tick_list(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
RequestMrkDataSmart::tick_list() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.RequestMrkDataSmart.tick_list)
  return tick_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
RequestMrkDataSmart::_internal_mutable_tick_list() {
  return &tick_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
RequestMrkDataSmart::mutable_tick_list() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.RequestMrkDataSmart.tick_list)
  return _internal_mutable_tick_list();
}

// bool snapshot = 4;
inline void RequestMrkDataSmart::clear_snapshot() {
  snapshot_ = false;
}
inline bool RequestMrkDataSmart::_internal_snapshot() const {
  return snapshot_;
}
inline bool RequestMrkDataSmart::snapshot() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestMrkDataSmart.snapshot)
  return _internal_snapshot();
}
inline void RequestMrkDataSmart::_internal_set_snapshot(bool value) {
  
  snapshot_ = value;
}
inline void RequestMrkDataSmart::set_snapshot(bool value) {
  _internal_set_snapshot(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestMrkDataSmart.snapshot)
}

// -------------------------------------------------------------------

// RequestContractDetails

// uint32 id = 1;
inline void RequestContractDetails::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestContractDetails::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestContractDetails::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestContractDetails.id)
  return _internal_id();
}
inline void RequestContractDetails::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestContractDetails::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestContractDetails.id)
}

// repeated .Jde.Markets.Proto.Contract contracts = 2;
inline int RequestContractDetails::_internal_contracts_size() const {
  return contracts_.size();
}
inline int RequestContractDetails::contracts_size() const {
  return _internal_contracts_size();
}
inline ::Jde::Markets::Proto::Contract* RequestContractDetails::mutable_contracts(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestContractDetails.contracts)
  return contracts_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Contract >*
RequestContractDetails::mutable_contracts() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.RequestContractDetails.contracts)
  return &contracts_;
}
inline const ::Jde::Markets::Proto::Contract& RequestContractDetails::_internal_contracts(int index) const {
  return contracts_.Get(index);
}
inline const ::Jde::Markets::Proto::Contract& RequestContractDetails::contracts(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestContractDetails.contracts)
  return _internal_contracts(index);
}
inline ::Jde::Markets::Proto::Contract* RequestContractDetails::_internal_add_contracts() {
  return contracts_.Add();
}
inline ::Jde::Markets::Proto::Contract* RequestContractDetails::add_contracts() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.RequestContractDetails.contracts)
  return _internal_add_contracts();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Contract >&
RequestContractDetails::contracts() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.RequestContractDetails.contracts)
  return contracts_;
}

// -------------------------------------------------------------------

// RequestOptions

// uint32 id = 1;
inline void RequestOptions::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.id)
  return _internal_id();
}
inline void RequestOptions::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestOptions::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.id)
}

// uint32 contract_id = 2;
inline void RequestOptions::clear_contract_id() {
  contract_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.contract_id)
  return _internal_contract_id();
}
inline void RequestOptions::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  contract_id_ = value;
}
inline void RequestOptions::set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.contract_id)
}

// uint32 security_type = 3;
inline void RequestOptions::clear_security_type() {
  security_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::_internal_security_type() const {
  return security_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::security_type() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.security_type)
  return _internal_security_type();
}
inline void RequestOptions::_internal_set_security_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  security_type_ = value;
}
inline void RequestOptions::set_security_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_security_type(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.security_type)
}

// uint32 start_expiration = 4;
inline void RequestOptions::clear_start_expiration() {
  start_expiration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::_internal_start_expiration() const {
  return start_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::start_expiration() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.start_expiration)
  return _internal_start_expiration();
}
inline void RequestOptions::_internal_set_start_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_expiration_ = value;
}
inline void RequestOptions::set_start_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start_expiration(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.start_expiration)
}

// uint32 end_expiration = 5;
inline void RequestOptions::clear_end_expiration() {
  end_expiration_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::_internal_end_expiration() const {
  return end_expiration_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestOptions::end_expiration() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.end_expiration)
  return _internal_end_expiration();
}
inline void RequestOptions::_internal_set_end_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  end_expiration_ = value;
}
inline void RequestOptions::set_end_expiration(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end_expiration(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.end_expiration)
}

// double start_srike = 6;
inline void RequestOptions::clear_start_srike() {
  start_srike_ = 0;
}
inline double RequestOptions::_internal_start_srike() const {
  return start_srike_;
}
inline double RequestOptions::start_srike() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.start_srike)
  return _internal_start_srike();
}
inline void RequestOptions::_internal_set_start_srike(double value) {
  
  start_srike_ = value;
}
inline void RequestOptions::set_start_srike(double value) {
  _internal_set_start_srike(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.start_srike)
}

// double end_strike = 7;
inline void RequestOptions::clear_end_strike() {
  end_strike_ = 0;
}
inline double RequestOptions::_internal_end_strike() const {
  return end_strike_;
}
inline double RequestOptions::end_strike() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestOptions.end_strike)
  return _internal_end_strike();
}
inline void RequestOptions::_internal_set_end_strike(double value) {
  
  end_strike_ = value;
}
inline void RequestOptions::set_end_strike(double value) {
  _internal_set_end_strike(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestOptions.end_strike)
}

// -------------------------------------------------------------------

// FlexExecutions

// uint32 id = 1;
inline void FlexExecutions::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.FlexExecutions.id)
  return _internal_id();
}
inline void FlexExecutions::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void FlexExecutions::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.FlexExecutions.id)
}

// string account_number = 2;
inline void FlexExecutions::clear_account_number() {
  account_number_.ClearToEmpty();
}
inline const std::string& FlexExecutions::account_number() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.FlexExecutions.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void FlexExecutions::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.FlexExecutions.account_number)
}
inline std::string* FlexExecutions::mutable_account_number() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.FlexExecutions.account_number)
  return _internal_mutable_account_number();
}
inline const std::string& FlexExecutions::_internal_account_number() const {
  return account_number_.Get();
}
inline void FlexExecutions::_internal_set_account_number(const std::string& value) {
  
  account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* FlexExecutions::_internal_mutable_account_number() {
  
  return account_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* FlexExecutions::release_account_number() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.FlexExecutions.account_number)
  return account_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void FlexExecutions::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  account_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_number,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.FlexExecutions.account_number)
}

// uint32 start = 3;
inline void FlexExecutions::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::start() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.FlexExecutions.start)
  return _internal_start();
}
inline void FlexExecutions::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void FlexExecutions::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.FlexExecutions.start)
}

// uint32 end = 4;
inline void FlexExecutions::clear_end() {
  end_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::_internal_end() const {
  return end_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 FlexExecutions::end() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.FlexExecutions.end)
  return _internal_end();
}
inline void FlexExecutions::_internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  end_ = value;
}
inline void FlexExecutions::set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.FlexExecutions.end)
}

// -------------------------------------------------------------------

// PlaceOrder

// uint32 id = 1;
inline void PlaceOrder::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlaceOrder::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlaceOrder::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.id)
  return _internal_id();
}
inline void PlaceOrder::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void PlaceOrder::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.PlaceOrder.id)
}

// .Jde.Markets.Proto.Contract contract = 2;
inline bool PlaceOrder::_internal_has_contract() const {
  return this != internal_default_instance() && contract_ != nullptr;
}
inline bool PlaceOrder::has_contract() const {
  return _internal_has_contract();
}
inline const ::Jde::Markets::Proto::Contract& PlaceOrder::_internal_contract() const {
  const ::Jde::Markets::Proto::Contract* p = contract_;
  return p != nullptr ? *p : reinterpret_cast<const ::Jde::Markets::Proto::Contract&>(
      ::Jde::Markets::Proto::_Contract_default_instance_);
}
inline const ::Jde::Markets::Proto::Contract& PlaceOrder::contract() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.contract)
  return _internal_contract();
}
inline void PlaceOrder::unsafe_arena_set_allocated_contract(
    ::Jde::Markets::Proto::Contract* contract) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  contract_ = contract;
  if (contract) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.PlaceOrder.contract)
}
inline ::Jde::Markets::Proto::Contract* PlaceOrder::release_contract() {
  
  ::Jde::Markets::Proto::Contract* temp = contract_;
  contract_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Jde::Markets::Proto::Contract* PlaceOrder::unsafe_arena_release_contract() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.PlaceOrder.contract)
  
  ::Jde::Markets::Proto::Contract* temp = contract_;
  contract_ = nullptr;
  return temp;
}
inline ::Jde::Markets::Proto::Contract* PlaceOrder::_internal_mutable_contract() {
  
  if (contract_ == nullptr) {
    auto* p = CreateMaybeMessage<::Jde::Markets::Proto::Contract>(GetArenaForAllocation());
    contract_ = p;
  }
  return contract_;
}
inline ::Jde::Markets::Proto::Contract* PlaceOrder::mutable_contract() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.PlaceOrder.contract)
  return _internal_mutable_contract();
}
inline void PlaceOrder::set_allocated_contract(::Jde::Markets::Proto::Contract* contract) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract_);
  }
  if (contract) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(contract));
    if (message_arena != submessage_arena) {
      contract = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, contract, submessage_arena);
    }
    
  } else {
    
  }
  contract_ = contract;
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.PlaceOrder.contract)
}

// .Jde.Markets.Proto.Order order = 3;
inline bool PlaceOrder::_internal_has_order() const {
  return this != internal_default_instance() && order_ != nullptr;
}
inline bool PlaceOrder::has_order() const {
  return _internal_has_order();
}
inline const ::Jde::Markets::Proto::Order& PlaceOrder::_internal_order() const {
  const ::Jde::Markets::Proto::Order* p = order_;
  return p != nullptr ? *p : reinterpret_cast<const ::Jde::Markets::Proto::Order&>(
      ::Jde::Markets::Proto::_Order_default_instance_);
}
inline const ::Jde::Markets::Proto::Order& PlaceOrder::order() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.order)
  return _internal_order();
}
inline void PlaceOrder::unsafe_arena_set_allocated_order(
    ::Jde::Markets::Proto::Order* order) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_);
  }
  order_ = order;
  if (order) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.PlaceOrder.order)
}
inline ::Jde::Markets::Proto::Order* PlaceOrder::release_order() {
  
  ::Jde::Markets::Proto::Order* temp = order_;
  order_ = nullptr;
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Jde::Markets::Proto::Order* PlaceOrder::unsafe_arena_release_order() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.PlaceOrder.order)
  
  ::Jde::Markets::Proto::Order* temp = order_;
  order_ = nullptr;
  return temp;
}
inline ::Jde::Markets::Proto::Order* PlaceOrder::_internal_mutable_order() {
  
  if (order_ == nullptr) {
    auto* p = CreateMaybeMessage<::Jde::Markets::Proto::Order>(GetArenaForAllocation());
    order_ = p;
  }
  return order_;
}
inline ::Jde::Markets::Proto::Order* PlaceOrder::mutable_order() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.PlaceOrder.order)
  return _internal_mutable_order();
}
inline void PlaceOrder::set_allocated_order(::Jde::Markets::Proto::Order* order) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(order_);
  }
  if (order) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(order));
    if (message_arena != submessage_arena) {
      order = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, order, submessage_arena);
    }
    
  } else {
    
  }
  order_ = order;
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.PlaceOrder.order)
}

// double stop = 4;
inline void PlaceOrder::clear_stop() {
  stop_ = 0;
}
inline double PlaceOrder::_internal_stop() const {
  return stop_;
}
inline double PlaceOrder::stop() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.stop)
  return _internal_stop();
}
inline void PlaceOrder::_internal_set_stop(double value) {
  
  stop_ = value;
}
inline void PlaceOrder::set_stop(double value) {
  _internal_set_stop(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.PlaceOrder.stop)
}

// double stop_limit = 5;
inline void PlaceOrder::clear_stop_limit() {
  stop_limit_ = 0;
}
inline double PlaceOrder::_internal_stop_limit() const {
  return stop_limit_;
}
inline double PlaceOrder::stop_limit() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.stop_limit)
  return _internal_stop_limit();
}
inline void PlaceOrder::_internal_set_stop_limit(double value) {
  
  stop_limit_ = value;
}
inline void PlaceOrder::set_stop_limit(double value) {
  _internal_set_stop_limit(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.PlaceOrder.stop_limit)
}

// string block_id = 6;
inline void PlaceOrder::clear_block_id() {
  block_id_.ClearToEmpty();
}
inline const std::string& PlaceOrder::block_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.PlaceOrder.block_id)
  return _internal_block_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PlaceOrder::set_block_id(ArgT0&& arg0, ArgT... args) {
 
 block_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.PlaceOrder.block_id)
}
inline std::string* PlaceOrder::mutable_block_id() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.PlaceOrder.block_id)
  return _internal_mutable_block_id();
}
inline const std::string& PlaceOrder::_internal_block_id() const {
  return block_id_.Get();
}
inline void PlaceOrder::_internal_set_block_id(const std::string& value) {
  
  block_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PlaceOrder::_internal_mutable_block_id() {
  
  return block_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PlaceOrder::release_block_id() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.PlaceOrder.block_id)
  return block_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PlaceOrder::set_allocated_block_id(std::string* block_id) {
  if (block_id != nullptr) {
    
  } else {
    
  }
  block_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), block_id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.PlaceOrder.block_id)
}

// -------------------------------------------------------------------

// RequestExecutions

// uint32 id = 1;
inline void RequestExecutions::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.id)
  return _internal_id();
}
inline void RequestExecutions::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void RequestExecutions::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.id)
}

// uint32 client_id = 2;
inline void RequestExecutions::clear_client_id() {
  client_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::_internal_client_id() const {
  return client_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::client_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.client_id)
  return _internal_client_id();
}
inline void RequestExecutions::_internal_set_client_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  client_id_ = value;
}
inline void RequestExecutions::set_client_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_client_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.client_id)
}

// string account_number = 3;
inline void RequestExecutions::clear_account_number() {
  account_number_.ClearToEmpty();
}
inline const std::string& RequestExecutions::account_number() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.account_number)
  return _internal_account_number();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestExecutions::set_account_number(ArgT0&& arg0, ArgT... args) {
 
 account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.account_number)
}
inline std::string* RequestExecutions::mutable_account_number() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestExecutions.account_number)
  return _internal_mutable_account_number();
}
inline const std::string& RequestExecutions::_internal_account_number() const {
  return account_number_.Get();
}
inline void RequestExecutions::_internal_set_account_number(const std::string& value) {
  
  account_number_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestExecutions::_internal_mutable_account_number() {
  
  return account_number_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestExecutions::release_account_number() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestExecutions.account_number)
  return account_number_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestExecutions::set_allocated_account_number(std::string* account_number) {
  if (account_number != nullptr) {
    
  } else {
    
  }
  account_number_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), account_number,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestExecutions.account_number)
}

// uint32 time = 4;
inline void RequestExecutions::clear_time() {
  time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::_internal_time() const {
  return time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 RequestExecutions::time() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.time)
  return _internal_time();
}
inline void RequestExecutions::_internal_set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  time_ = value;
}
inline void RequestExecutions::set_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.time)
}

// string symbol = 5;
inline void RequestExecutions::clear_symbol() {
  symbol_.ClearToEmpty();
}
inline const std::string& RequestExecutions::symbol() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.symbol)
  return _internal_symbol();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestExecutions::set_symbol(ArgT0&& arg0, ArgT... args) {
 
 symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.symbol)
}
inline std::string* RequestExecutions::mutable_symbol() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestExecutions.symbol)
  return _internal_mutable_symbol();
}
inline const std::string& RequestExecutions::_internal_symbol() const {
  return symbol_.Get();
}
inline void RequestExecutions::_internal_set_symbol(const std::string& value) {
  
  symbol_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestExecutions::_internal_mutable_symbol() {
  
  return symbol_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestExecutions::release_symbol() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestExecutions.symbol)
  return symbol_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestExecutions::set_allocated_symbol(std::string* symbol) {
  if (symbol != nullptr) {
    
  } else {
    
  }
  symbol_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), symbol,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestExecutions.symbol)
}

// string security_type = 6;
inline void RequestExecutions::clear_security_type() {
  security_type_.ClearToEmpty();
}
inline const std::string& RequestExecutions::security_type() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.security_type)
  return _internal_security_type();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestExecutions::set_security_type(ArgT0&& arg0, ArgT... args) {
 
 security_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.security_type)
}
inline std::string* RequestExecutions::mutable_security_type() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestExecutions.security_type)
  return _internal_mutable_security_type();
}
inline const std::string& RequestExecutions::_internal_security_type() const {
  return security_type_.Get();
}
inline void RequestExecutions::_internal_set_security_type(const std::string& value) {
  
  security_type_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestExecutions::_internal_mutable_security_type() {
  
  return security_type_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestExecutions::release_security_type() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestExecutions.security_type)
  return security_type_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestExecutions::set_allocated_security_type(std::string* security_type) {
  if (security_type != nullptr) {
    
  } else {
    
  }
  security_type_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), security_type,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestExecutions.security_type)
}

// string exchange = 7;
inline void RequestExecutions::clear_exchange() {
  exchange_.ClearToEmpty();
}
inline const std::string& RequestExecutions::exchange() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.exchange)
  return _internal_exchange();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestExecutions::set_exchange(ArgT0&& arg0, ArgT... args) {
 
 exchange_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.exchange)
}
inline std::string* RequestExecutions::mutable_exchange() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestExecutions.exchange)
  return _internal_mutable_exchange();
}
inline const std::string& RequestExecutions::_internal_exchange() const {
  return exchange_.Get();
}
inline void RequestExecutions::_internal_set_exchange(const std::string& value) {
  
  exchange_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestExecutions::_internal_mutable_exchange() {
  
  return exchange_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestExecutions::release_exchange() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestExecutions.exchange)
  return exchange_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestExecutions::set_allocated_exchange(std::string* exchange) {
  if (exchange != nullptr) {
    
  } else {
    
  }
  exchange_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), exchange,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestExecutions.exchange)
}

// string side = 8;
inline void RequestExecutions::clear_side() {
  side_.ClearToEmpty();
}
inline const std::string& RequestExecutions::side() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestExecutions.side)
  return _internal_side();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void RequestExecutions::set_side(ArgT0&& arg0, ArgT... args) {
 
 side_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.RequestExecutions.side)
}
inline std::string* RequestExecutions::mutable_side() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestExecutions.side)
  return _internal_mutable_side();
}
inline const std::string& RequestExecutions::_internal_side() const {
  return side_.Get();
}
inline void RequestExecutions::_internal_set_side(const std::string& value) {
  
  side_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* RequestExecutions::_internal_mutable_side() {
  
  return side_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* RequestExecutions::release_side() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestExecutions.side)
  return side_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void RequestExecutions::set_allocated_side(std::string* side) {
  if (side != nullptr) {
    
  } else {
    
  }
  side_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), side,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.RequestExecutions.side)
}

// -------------------------------------------------------------------

// Custom

// uint32 id = 1;
inline void Custom::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Custom::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Custom::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.Custom.id)
  return _internal_id();
}
inline void Custom::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void Custom::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.Custom.id)
}

// bytes message = 2;
inline void Custom::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& Custom::message() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.Custom.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void Custom::set_message(ArgT0&& arg0, ArgT... args) {
 
 message_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.Custom.message)
}
inline std::string* Custom::mutable_message() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.Custom.message)
  return _internal_mutable_message();
}
inline const std::string& Custom::_internal_message() const {
  return message_.Get();
}
inline void Custom::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* Custom::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* Custom::release_message() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.Custom.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void Custom::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.Custom.message)
}

// -------------------------------------------------------------------

// RequestUnion

// .Jde.Markets.Proto.Requests.RequestAccountUpdates account_updates = 1;
inline bool RequestUnion::_internal_has_account_updates() const {
  return Value_case() == kAccountUpdates;
}
inline bool RequestUnion::has_account_updates() const {
  return _internal_has_account_updates();
}
inline void RequestUnion::set_has_account_updates() {
  _oneof_case_[0] = kAccountUpdates;
}
inline void RequestUnion::clear_account_updates() {
  if (_internal_has_account_updates()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.account_updates_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdates* RequestUnion::release_account_updates() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.account_updates)
  if (_internal_has_account_updates()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestAccountUpdates* temp = Value_.account_updates_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.account_updates_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestAccountUpdates& RequestUnion::_internal_account_updates() const {
  return _internal_has_account_updates()
      ? *Value_.account_updates_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestAccountUpdates&>(::Jde::Markets::Proto::Requests::_RequestAccountUpdates_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestAccountUpdates& RequestUnion::account_updates() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.account_updates)
  return _internal_account_updates();
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdates* RequestUnion::unsafe_arena_release_account_updates() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.account_updates)
  if (_internal_has_account_updates()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestAccountUpdates* temp = Value_.account_updates_;
    Value_.account_updates_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_account_updates(::Jde::Markets::Proto::Requests::RequestAccountUpdates* account_updates) {
  clear_Value();
  if (account_updates) {
    set_has_account_updates();
    Value_.account_updates_ = account_updates;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.account_updates)
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdates* RequestUnion::_internal_mutable_account_updates() {
  if (!_internal_has_account_updates()) {
    clear_Value();
    set_has_account_updates();
    Value_.account_updates_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestAccountUpdates >(GetArenaForAllocation());
  }
  return Value_.account_updates_;
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdates* RequestUnion::mutable_account_updates() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.account_updates)
  return _internal_mutable_account_updates();
}

// .Jde.Markets.Proto.Requests.RequestAccountUpdatesMulti account_updates_multi = 2;
inline bool RequestUnion::_internal_has_account_updates_multi() const {
  return Value_case() == kAccountUpdatesMulti;
}
inline bool RequestUnion::has_account_updates_multi() const {
  return _internal_has_account_updates_multi();
}
inline void RequestUnion::set_has_account_updates_multi() {
  _oneof_case_[0] = kAccountUpdatesMulti;
}
inline void RequestUnion::clear_account_updates_multi() {
  if (_internal_has_account_updates_multi()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.account_updates_multi_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* RequestUnion::release_account_updates_multi() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.account_updates_multi)
  if (_internal_has_account_updates_multi()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* temp = Value_.account_updates_multi_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.account_updates_multi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti& RequestUnion::_internal_account_updates_multi() const {
  return _internal_has_account_updates_multi()
      ? *Value_.account_updates_multi_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti&>(::Jde::Markets::Proto::Requests::_RequestAccountUpdatesMulti_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti& RequestUnion::account_updates_multi() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.account_updates_multi)
  return _internal_account_updates_multi();
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* RequestUnion::unsafe_arena_release_account_updates_multi() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.account_updates_multi)
  if (_internal_has_account_updates_multi()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* temp = Value_.account_updates_multi_;
    Value_.account_updates_multi_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_account_updates_multi(::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* account_updates_multi) {
  clear_Value();
  if (account_updates_multi) {
    set_has_account_updates_multi();
    Value_.account_updates_multi_ = account_updates_multi;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.account_updates_multi)
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* RequestUnion::_internal_mutable_account_updates_multi() {
  if (!_internal_has_account_updates_multi()) {
    clear_Value();
    set_has_account_updates_multi();
    Value_.account_updates_multi_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti >(GetArenaForAllocation());
  }
  return Value_.account_updates_multi_;
}
inline ::Jde::Markets::Proto::Requests::RequestAccountUpdatesMulti* RequestUnion::mutable_account_updates_multi() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.account_updates_multi)
  return _internal_mutable_account_updates_multi();
}

// .Jde.Markets.Proto.Requests.RequestContractDetails contract_details = 3;
inline bool RequestUnion::_internal_has_contract_details() const {
  return Value_case() == kContractDetails;
}
inline bool RequestUnion::has_contract_details() const {
  return _internal_has_contract_details();
}
inline void RequestUnion::set_has_contract_details() {
  _oneof_case_[0] = kContractDetails;
}
inline void RequestUnion::clear_contract_details() {
  if (_internal_has_contract_details()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.contract_details_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestContractDetails* RequestUnion::release_contract_details() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.contract_details)
  if (_internal_has_contract_details()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestContractDetails* temp = Value_.contract_details_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.contract_details_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestContractDetails& RequestUnion::_internal_contract_details() const {
  return _internal_has_contract_details()
      ? *Value_.contract_details_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestContractDetails&>(::Jde::Markets::Proto::Requests::_RequestContractDetails_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestContractDetails& RequestUnion::contract_details() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.contract_details)
  return _internal_contract_details();
}
inline ::Jde::Markets::Proto::Requests::RequestContractDetails* RequestUnion::unsafe_arena_release_contract_details() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.contract_details)
  if (_internal_has_contract_details()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestContractDetails* temp = Value_.contract_details_;
    Value_.contract_details_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_contract_details(::Jde::Markets::Proto::Requests::RequestContractDetails* contract_details) {
  clear_Value();
  if (contract_details) {
    set_has_contract_details();
    Value_.contract_details_ = contract_details;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.contract_details)
}
inline ::Jde::Markets::Proto::Requests::RequestContractDetails* RequestUnion::_internal_mutable_contract_details() {
  if (!_internal_has_contract_details()) {
    clear_Value();
    set_has_contract_details();
    Value_.contract_details_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestContractDetails >(GetArenaForAllocation());
  }
  return Value_.contract_details_;
}
inline ::Jde::Markets::Proto::Requests::RequestContractDetails* RequestUnion::mutable_contract_details() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.contract_details)
  return _internal_mutable_contract_details();
}

// .Jde.Markets.Proto.Requests.GenericRequests generic_requests = 4;
inline bool RequestUnion::_internal_has_generic_requests() const {
  return Value_case() == kGenericRequests;
}
inline bool RequestUnion::has_generic_requests() const {
  return _internal_has_generic_requests();
}
inline void RequestUnion::set_has_generic_requests() {
  _oneof_case_[0] = kGenericRequests;
}
inline void RequestUnion::clear_generic_requests() {
  if (_internal_has_generic_requests()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.generic_requests_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::GenericRequests* RequestUnion::release_generic_requests() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.generic_requests)
  if (_internal_has_generic_requests()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::GenericRequests* temp = Value_.generic_requests_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.generic_requests_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::GenericRequests& RequestUnion::_internal_generic_requests() const {
  return _internal_has_generic_requests()
      ? *Value_.generic_requests_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::GenericRequests&>(::Jde::Markets::Proto::Requests::_GenericRequests_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::GenericRequests& RequestUnion::generic_requests() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.generic_requests)
  return _internal_generic_requests();
}
inline ::Jde::Markets::Proto::Requests::GenericRequests* RequestUnion::unsafe_arena_release_generic_requests() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.generic_requests)
  if (_internal_has_generic_requests()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::GenericRequests* temp = Value_.generic_requests_;
    Value_.generic_requests_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_generic_requests(::Jde::Markets::Proto::Requests::GenericRequests* generic_requests) {
  clear_Value();
  if (generic_requests) {
    set_has_generic_requests();
    Value_.generic_requests_ = generic_requests;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.generic_requests)
}
inline ::Jde::Markets::Proto::Requests::GenericRequests* RequestUnion::_internal_mutable_generic_requests() {
  if (!_internal_has_generic_requests()) {
    clear_Value();
    set_has_generic_requests();
    Value_.generic_requests_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::GenericRequests >(GetArenaForAllocation());
  }
  return Value_.generic_requests_;
}
inline ::Jde::Markets::Proto::Requests::GenericRequests* RequestUnion::mutable_generic_requests() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.generic_requests)
  return _internal_mutable_generic_requests();
}

// .Jde.Markets.Proto.Requests.RequestMrkDataSmart market_data_smart = 5;
inline bool RequestUnion::_internal_has_market_data_smart() const {
  return Value_case() == kMarketDataSmart;
}
inline bool RequestUnion::has_market_data_smart() const {
  return _internal_has_market_data_smart();
}
inline void RequestUnion::set_has_market_data_smart() {
  _oneof_case_[0] = kMarketDataSmart;
}
inline void RequestUnion::clear_market_data_smart() {
  if (_internal_has_market_data_smart()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.market_data_smart_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* RequestUnion::release_market_data_smart() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.market_data_smart)
  if (_internal_has_market_data_smart()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* temp = Value_.market_data_smart_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.market_data_smart_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart& RequestUnion::_internal_market_data_smart() const {
  return _internal_has_market_data_smart()
      ? *Value_.market_data_smart_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestMrkDataSmart&>(::Jde::Markets::Proto::Requests::_RequestMrkDataSmart_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestMrkDataSmart& RequestUnion::market_data_smart() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.market_data_smart)
  return _internal_market_data_smart();
}
inline ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* RequestUnion::unsafe_arena_release_market_data_smart() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.market_data_smart)
  if (_internal_has_market_data_smart()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* temp = Value_.market_data_smart_;
    Value_.market_data_smart_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_market_data_smart(::Jde::Markets::Proto::Requests::RequestMrkDataSmart* market_data_smart) {
  clear_Value();
  if (market_data_smart) {
    set_has_market_data_smart();
    Value_.market_data_smart_ = market_data_smart;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.market_data_smart)
}
inline ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* RequestUnion::_internal_mutable_market_data_smart() {
  if (!_internal_has_market_data_smart()) {
    clear_Value();
    set_has_market_data_smart();
    Value_.market_data_smart_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestMrkDataSmart >(GetArenaForAllocation());
  }
  return Value_.market_data_smart_;
}
inline ::Jde::Markets::Proto::Requests::RequestMrkDataSmart* RequestUnion::mutable_market_data_smart() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.market_data_smart)
  return _internal_mutable_market_data_smart();
}

// .Jde.Markets.Proto.Requests.RequestOptions options = 7;
inline bool RequestUnion::_internal_has_options() const {
  return Value_case() == kOptions;
}
inline bool RequestUnion::has_options() const {
  return _internal_has_options();
}
inline void RequestUnion::set_has_options() {
  _oneof_case_[0] = kOptions;
}
inline void RequestUnion::clear_options() {
  if (_internal_has_options()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.options_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestOptions* RequestUnion::release_options() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.options)
  if (_internal_has_options()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestOptions* temp = Value_.options_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.options_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestOptions& RequestUnion::_internal_options() const {
  return _internal_has_options()
      ? *Value_.options_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestOptions&>(::Jde::Markets::Proto::Requests::_RequestOptions_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestOptions& RequestUnion::options() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.options)
  return _internal_options();
}
inline ::Jde::Markets::Proto::Requests::RequestOptions* RequestUnion::unsafe_arena_release_options() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.options)
  if (_internal_has_options()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestOptions* temp = Value_.options_;
    Value_.options_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_options(::Jde::Markets::Proto::Requests::RequestOptions* options) {
  clear_Value();
  if (options) {
    set_has_options();
    Value_.options_ = options;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.options)
}
inline ::Jde::Markets::Proto::Requests::RequestOptions* RequestUnion::_internal_mutable_options() {
  if (!_internal_has_options()) {
    clear_Value();
    set_has_options();
    Value_.options_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestOptions >(GetArenaForAllocation());
  }
  return Value_.options_;
}
inline ::Jde::Markets::Proto::Requests::RequestOptions* RequestUnion::mutable_options() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.options)
  return _internal_mutable_options();
}

// .Jde.Markets.Proto.Requests.RequestHistoricalData historical_data = 8;
inline bool RequestUnion::_internal_has_historical_data() const {
  return Value_case() == kHistoricalData;
}
inline bool RequestUnion::has_historical_data() const {
  return _internal_has_historical_data();
}
inline void RequestUnion::set_has_historical_data() {
  _oneof_case_[0] = kHistoricalData;
}
inline void RequestUnion::clear_historical_data() {
  if (_internal_has_historical_data()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.historical_data_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestHistoricalData* RequestUnion::release_historical_data() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.historical_data)
  if (_internal_has_historical_data()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestHistoricalData* temp = Value_.historical_data_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.historical_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestHistoricalData& RequestUnion::_internal_historical_data() const {
  return _internal_has_historical_data()
      ? *Value_.historical_data_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestHistoricalData&>(::Jde::Markets::Proto::Requests::_RequestHistoricalData_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestHistoricalData& RequestUnion::historical_data() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.historical_data)
  return _internal_historical_data();
}
inline ::Jde::Markets::Proto::Requests::RequestHistoricalData* RequestUnion::unsafe_arena_release_historical_data() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.historical_data)
  if (_internal_has_historical_data()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestHistoricalData* temp = Value_.historical_data_;
    Value_.historical_data_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_historical_data(::Jde::Markets::Proto::Requests::RequestHistoricalData* historical_data) {
  clear_Value();
  if (historical_data) {
    set_has_historical_data();
    Value_.historical_data_ = historical_data;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.historical_data)
}
inline ::Jde::Markets::Proto::Requests::RequestHistoricalData* RequestUnion::_internal_mutable_historical_data() {
  if (!_internal_has_historical_data()) {
    clear_Value();
    set_has_historical_data();
    Value_.historical_data_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestHistoricalData >(GetArenaForAllocation());
  }
  return Value_.historical_data_;
}
inline ::Jde::Markets::Proto::Requests::RequestHistoricalData* RequestUnion::mutable_historical_data() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.historical_data)
  return _internal_mutable_historical_data();
}

// .Jde.Markets.Proto.Requests.FlexExecutions flex_executions = 9;
inline bool RequestUnion::_internal_has_flex_executions() const {
  return Value_case() == kFlexExecutions;
}
inline bool RequestUnion::has_flex_executions() const {
  return _internal_has_flex_executions();
}
inline void RequestUnion::set_has_flex_executions() {
  _oneof_case_[0] = kFlexExecutions;
}
inline void RequestUnion::clear_flex_executions() {
  if (_internal_has_flex_executions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.flex_executions_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::FlexExecutions* RequestUnion::release_flex_executions() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.flex_executions)
  if (_internal_has_flex_executions()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::FlexExecutions* temp = Value_.flex_executions_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.flex_executions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::FlexExecutions& RequestUnion::_internal_flex_executions() const {
  return _internal_has_flex_executions()
      ? *Value_.flex_executions_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::FlexExecutions&>(::Jde::Markets::Proto::Requests::_FlexExecutions_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::FlexExecutions& RequestUnion::flex_executions() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.flex_executions)
  return _internal_flex_executions();
}
inline ::Jde::Markets::Proto::Requests::FlexExecutions* RequestUnion::unsafe_arena_release_flex_executions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.flex_executions)
  if (_internal_has_flex_executions()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::FlexExecutions* temp = Value_.flex_executions_;
    Value_.flex_executions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_flex_executions(::Jde::Markets::Proto::Requests::FlexExecutions* flex_executions) {
  clear_Value();
  if (flex_executions) {
    set_has_flex_executions();
    Value_.flex_executions_ = flex_executions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.flex_executions)
}
inline ::Jde::Markets::Proto::Requests::FlexExecutions* RequestUnion::_internal_mutable_flex_executions() {
  if (!_internal_has_flex_executions()) {
    clear_Value();
    set_has_flex_executions();
    Value_.flex_executions_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::FlexExecutions >(GetArenaForAllocation());
  }
  return Value_.flex_executions_;
}
inline ::Jde::Markets::Proto::Requests::FlexExecutions* RequestUnion::mutable_flex_executions() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.flex_executions)
  return _internal_mutable_flex_executions();
}

// .Jde.Markets.Proto.Requests.PlaceOrder place_order = 10;
inline bool RequestUnion::_internal_has_place_order() const {
  return Value_case() == kPlaceOrder;
}
inline bool RequestUnion::has_place_order() const {
  return _internal_has_place_order();
}
inline void RequestUnion::set_has_place_order() {
  _oneof_case_[0] = kPlaceOrder;
}
inline void RequestUnion::clear_place_order() {
  if (_internal_has_place_order()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.place_order_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::PlaceOrder* RequestUnion::release_place_order() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.place_order)
  if (_internal_has_place_order()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::PlaceOrder* temp = Value_.place_order_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.place_order_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::PlaceOrder& RequestUnion::_internal_place_order() const {
  return _internal_has_place_order()
      ? *Value_.place_order_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::PlaceOrder&>(::Jde::Markets::Proto::Requests::_PlaceOrder_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::PlaceOrder& RequestUnion::place_order() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.place_order)
  return _internal_place_order();
}
inline ::Jde::Markets::Proto::Requests::PlaceOrder* RequestUnion::unsafe_arena_release_place_order() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.place_order)
  if (_internal_has_place_order()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::PlaceOrder* temp = Value_.place_order_;
    Value_.place_order_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_place_order(::Jde::Markets::Proto::Requests::PlaceOrder* place_order) {
  clear_Value();
  if (place_order) {
    set_has_place_order();
    Value_.place_order_ = place_order;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.place_order)
}
inline ::Jde::Markets::Proto::Requests::PlaceOrder* RequestUnion::_internal_mutable_place_order() {
  if (!_internal_has_place_order()) {
    clear_Value();
    set_has_place_order();
    Value_.place_order_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::PlaceOrder >(GetArenaForAllocation());
  }
  return Value_.place_order_;
}
inline ::Jde::Markets::Proto::Requests::PlaceOrder* RequestUnion::mutable_place_order() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.place_order)
  return _internal_mutable_place_order();
}

// .Jde.Markets.Proto.Requests.RequestPositions request_positions = 11;
inline bool RequestUnion::_internal_has_request_positions() const {
  return Value_case() == kRequestPositions;
}
inline bool RequestUnion::has_request_positions() const {
  return _internal_has_request_positions();
}
inline void RequestUnion::set_has_request_positions() {
  _oneof_case_[0] = kRequestPositions;
}
inline void RequestUnion::clear_request_positions() {
  if (_internal_has_request_positions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.request_positions_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestPositions* RequestUnion::release_request_positions() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.request_positions)
  if (_internal_has_request_positions()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestPositions* temp = Value_.request_positions_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.request_positions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestPositions& RequestUnion::_internal_request_positions() const {
  return _internal_has_request_positions()
      ? *Value_.request_positions_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestPositions&>(::Jde::Markets::Proto::Requests::_RequestPositions_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestPositions& RequestUnion::request_positions() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.request_positions)
  return _internal_request_positions();
}
inline ::Jde::Markets::Proto::Requests::RequestPositions* RequestUnion::unsafe_arena_release_request_positions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.request_positions)
  if (_internal_has_request_positions()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestPositions* temp = Value_.request_positions_;
    Value_.request_positions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_request_positions(::Jde::Markets::Proto::Requests::RequestPositions* request_positions) {
  clear_Value();
  if (request_positions) {
    set_has_request_positions();
    Value_.request_positions_ = request_positions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.request_positions)
}
inline ::Jde::Markets::Proto::Requests::RequestPositions* RequestUnion::_internal_mutable_request_positions() {
  if (!_internal_has_request_positions()) {
    clear_Value();
    set_has_request_positions();
    Value_.request_positions_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestPositions >(GetArenaForAllocation());
  }
  return Value_.request_positions_;
}
inline ::Jde::Markets::Proto::Requests::RequestPositions* RequestUnion::mutable_request_positions() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.request_positions)
  return _internal_mutable_request_positions();
}

// .Jde.Markets.Proto.Requests.RequestExecutions request_executions = 12;
inline bool RequestUnion::_internal_has_request_executions() const {
  return Value_case() == kRequestExecutions;
}
inline bool RequestUnion::has_request_executions() const {
  return _internal_has_request_executions();
}
inline void RequestUnion::set_has_request_executions() {
  _oneof_case_[0] = kRequestExecutions;
}
inline void RequestUnion::clear_request_executions() {
  if (_internal_has_request_executions()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.request_executions_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::RequestExecutions* RequestUnion::release_request_executions() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.request_executions)
  if (_internal_has_request_executions()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::RequestExecutions* temp = Value_.request_executions_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.request_executions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::RequestExecutions& RequestUnion::_internal_request_executions() const {
  return _internal_has_request_executions()
      ? *Value_.request_executions_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::RequestExecutions&>(::Jde::Markets::Proto::Requests::_RequestExecutions_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::RequestExecutions& RequestUnion::request_executions() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.request_executions)
  return _internal_request_executions();
}
inline ::Jde::Markets::Proto::Requests::RequestExecutions* RequestUnion::unsafe_arena_release_request_executions() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.request_executions)
  if (_internal_has_request_executions()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::RequestExecutions* temp = Value_.request_executions_;
    Value_.request_executions_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_request_executions(::Jde::Markets::Proto::Requests::RequestExecutions* request_executions) {
  clear_Value();
  if (request_executions) {
    set_has_request_executions();
    Value_.request_executions_ = request_executions;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.request_executions)
}
inline ::Jde::Markets::Proto::Requests::RequestExecutions* RequestUnion::_internal_mutable_request_executions() {
  if (!_internal_has_request_executions()) {
    clear_Value();
    set_has_request_executions();
    Value_.request_executions_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::RequestExecutions >(GetArenaForAllocation());
  }
  return Value_.request_executions_;
}
inline ::Jde::Markets::Proto::Requests::RequestExecutions* RequestUnion::mutable_request_executions() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.request_executions)
  return _internal_mutable_request_executions();
}

// .Jde.Markets.Proto.Requests.StringRequest string_request = 13;
inline bool RequestUnion::_internal_has_string_request() const {
  return Value_case() == kStringRequest;
}
inline bool RequestUnion::has_string_request() const {
  return _internal_has_string_request();
}
inline void RequestUnion::set_has_string_request() {
  _oneof_case_[0] = kStringRequest;
}
inline void RequestUnion::clear_string_request() {
  if (_internal_has_string_request()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.string_request_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::StringRequest* RequestUnion::release_string_request() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.string_request)
  if (_internal_has_string_request()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::StringRequest* temp = Value_.string_request_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.string_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::StringRequest& RequestUnion::_internal_string_request() const {
  return _internal_has_string_request()
      ? *Value_.string_request_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::StringRequest&>(::Jde::Markets::Proto::Requests::_StringRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::StringRequest& RequestUnion::string_request() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.string_request)
  return _internal_string_request();
}
inline ::Jde::Markets::Proto::Requests::StringRequest* RequestUnion::unsafe_arena_release_string_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.string_request)
  if (_internal_has_string_request()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::StringRequest* temp = Value_.string_request_;
    Value_.string_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_string_request(::Jde::Markets::Proto::Requests::StringRequest* string_request) {
  clear_Value();
  if (string_request) {
    set_has_string_request();
    Value_.string_request_ = string_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.string_request)
}
inline ::Jde::Markets::Proto::Requests::StringRequest* RequestUnion::_internal_mutable_string_request() {
  if (!_internal_has_string_request()) {
    clear_Value();
    set_has_string_request();
    Value_.string_request_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::StringRequest >(GetArenaForAllocation());
  }
  return Value_.string_request_;
}
inline ::Jde::Markets::Proto::Requests::StringRequest* RequestUnion::mutable_string_request() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.string_request)
  return _internal_mutable_string_request();
}

// .Jde.Markets.Proto.Requests.EditWatchListRequest edit_watch_list = 14;
inline bool RequestUnion::_internal_has_edit_watch_list() const {
  return Value_case() == kEditWatchList;
}
inline bool RequestUnion::has_edit_watch_list() const {
  return _internal_has_edit_watch_list();
}
inline void RequestUnion::set_has_edit_watch_list() {
  _oneof_case_[0] = kEditWatchList;
}
inline void RequestUnion::clear_edit_watch_list() {
  if (_internal_has_edit_watch_list()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.edit_watch_list_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::EditWatchListRequest* RequestUnion::release_edit_watch_list() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.edit_watch_list)
  if (_internal_has_edit_watch_list()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::EditWatchListRequest* temp = Value_.edit_watch_list_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.edit_watch_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::EditWatchListRequest& RequestUnion::_internal_edit_watch_list() const {
  return _internal_has_edit_watch_list()
      ? *Value_.edit_watch_list_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::EditWatchListRequest&>(::Jde::Markets::Proto::Requests::_EditWatchListRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::EditWatchListRequest& RequestUnion::edit_watch_list() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.edit_watch_list)
  return _internal_edit_watch_list();
}
inline ::Jde::Markets::Proto::Requests::EditWatchListRequest* RequestUnion::unsafe_arena_release_edit_watch_list() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.edit_watch_list)
  if (_internal_has_edit_watch_list()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::EditWatchListRequest* temp = Value_.edit_watch_list_;
    Value_.edit_watch_list_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_edit_watch_list(::Jde::Markets::Proto::Requests::EditWatchListRequest* edit_watch_list) {
  clear_Value();
  if (edit_watch_list) {
    set_has_edit_watch_list();
    Value_.edit_watch_list_ = edit_watch_list;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.edit_watch_list)
}
inline ::Jde::Markets::Proto::Requests::EditWatchListRequest* RequestUnion::_internal_mutable_edit_watch_list() {
  if (!_internal_has_edit_watch_list()) {
    clear_Value();
    set_has_edit_watch_list();
    Value_.edit_watch_list_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::EditWatchListRequest >(GetArenaForAllocation());
  }
  return Value_.edit_watch_list_;
}
inline ::Jde::Markets::Proto::Requests::EditWatchListRequest* RequestUnion::mutable_edit_watch_list() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.edit_watch_list)
  return _internal_mutable_edit_watch_list();
}

// .Jde.Markets.Proto.Requests.NewsArticleRequest news_article_request = 15;
inline bool RequestUnion::_internal_has_news_article_request() const {
  return Value_case() == kNewsArticleRequest;
}
inline bool RequestUnion::has_news_article_request() const {
  return _internal_has_news_article_request();
}
inline void RequestUnion::set_has_news_article_request() {
  _oneof_case_[0] = kNewsArticleRequest;
}
inline void RequestUnion::clear_news_article_request() {
  if (_internal_has_news_article_request()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.news_article_request_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::NewsArticleRequest* RequestUnion::release_news_article_request() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.news_article_request)
  if (_internal_has_news_article_request()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::NewsArticleRequest* temp = Value_.news_article_request_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.news_article_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::NewsArticleRequest& RequestUnion::_internal_news_article_request() const {
  return _internal_has_news_article_request()
      ? *Value_.news_article_request_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::NewsArticleRequest&>(::Jde::Markets::Proto::Requests::_NewsArticleRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::NewsArticleRequest& RequestUnion::news_article_request() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.news_article_request)
  return _internal_news_article_request();
}
inline ::Jde::Markets::Proto::Requests::NewsArticleRequest* RequestUnion::unsafe_arena_release_news_article_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.news_article_request)
  if (_internal_has_news_article_request()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::NewsArticleRequest* temp = Value_.news_article_request_;
    Value_.news_article_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_news_article_request(::Jde::Markets::Proto::Requests::NewsArticleRequest* news_article_request) {
  clear_Value();
  if (news_article_request) {
    set_has_news_article_request();
    Value_.news_article_request_ = news_article_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.news_article_request)
}
inline ::Jde::Markets::Proto::Requests::NewsArticleRequest* RequestUnion::_internal_mutable_news_article_request() {
  if (!_internal_has_news_article_request()) {
    clear_Value();
    set_has_news_article_request();
    Value_.news_article_request_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::NewsArticleRequest >(GetArenaForAllocation());
  }
  return Value_.news_article_request_;
}
inline ::Jde::Markets::Proto::Requests::NewsArticleRequest* RequestUnion::mutable_news_article_request() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.news_article_request)
  return _internal_mutable_news_article_request();
}

// .Jde.Markets.Proto.Requests.HistoricalNewsRequest historical_news_request = 16;
inline bool RequestUnion::_internal_has_historical_news_request() const {
  return Value_case() == kHistoricalNewsRequest;
}
inline bool RequestUnion::has_historical_news_request() const {
  return _internal_has_historical_news_request();
}
inline void RequestUnion::set_has_historical_news_request() {
  _oneof_case_[0] = kHistoricalNewsRequest;
}
inline void RequestUnion::clear_historical_news_request() {
  if (_internal_has_historical_news_request()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.historical_news_request_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* RequestUnion::release_historical_news_request() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.historical_news_request)
  if (_internal_has_historical_news_request()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* temp = Value_.historical_news_request_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.historical_news_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::HistoricalNewsRequest& RequestUnion::_internal_historical_news_request() const {
  return _internal_has_historical_news_request()
      ? *Value_.historical_news_request_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::HistoricalNewsRequest&>(::Jde::Markets::Proto::Requests::_HistoricalNewsRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::HistoricalNewsRequest& RequestUnion::historical_news_request() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.historical_news_request)
  return _internal_historical_news_request();
}
inline ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* RequestUnion::unsafe_arena_release_historical_news_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.historical_news_request)
  if (_internal_has_historical_news_request()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* temp = Value_.historical_news_request_;
    Value_.historical_news_request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_historical_news_request(::Jde::Markets::Proto::Requests::HistoricalNewsRequest* historical_news_request) {
  clear_Value();
  if (historical_news_request) {
    set_has_historical_news_request();
    Value_.historical_news_request_ = historical_news_request;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.historical_news_request)
}
inline ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* RequestUnion::_internal_mutable_historical_news_request() {
  if (!_internal_has_historical_news_request()) {
    clear_Value();
    set_has_historical_news_request();
    Value_.historical_news_request_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::HistoricalNewsRequest >(GetArenaForAllocation());
  }
  return Value_.historical_news_request_;
}
inline ::Jde::Markets::Proto::Requests::HistoricalNewsRequest* RequestUnion::mutable_historical_news_request() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.historical_news_request)
  return _internal_mutable_historical_news_request();
}

// .Jde.Markets.Proto.Requests.StdDevRequest std_dev = 17;
inline bool RequestUnion::_internal_has_std_dev() const {
  return Value_case() == kStdDev;
}
inline bool RequestUnion::has_std_dev() const {
  return _internal_has_std_dev();
}
inline void RequestUnion::set_has_std_dev() {
  _oneof_case_[0] = kStdDev;
}
inline void RequestUnion::clear_std_dev() {
  if (_internal_has_std_dev()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.std_dev_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::StdDevRequest* RequestUnion::release_std_dev() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.std_dev)
  if (_internal_has_std_dev()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::StdDevRequest* temp = Value_.std_dev_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.std_dev_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::StdDevRequest& RequestUnion::_internal_std_dev() const {
  return _internal_has_std_dev()
      ? *Value_.std_dev_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::StdDevRequest&>(::Jde::Markets::Proto::Requests::_StdDevRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::StdDevRequest& RequestUnion::std_dev() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.std_dev)
  return _internal_std_dev();
}
inline ::Jde::Markets::Proto::Requests::StdDevRequest* RequestUnion::unsafe_arena_release_std_dev() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.std_dev)
  if (_internal_has_std_dev()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::StdDevRequest* temp = Value_.std_dev_;
    Value_.std_dev_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_std_dev(::Jde::Markets::Proto::Requests::StdDevRequest* std_dev) {
  clear_Value();
  if (std_dev) {
    set_has_std_dev();
    Value_.std_dev_ = std_dev;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.std_dev)
}
inline ::Jde::Markets::Proto::Requests::StdDevRequest* RequestUnion::_internal_mutable_std_dev() {
  if (!_internal_has_std_dev()) {
    clear_Value();
    set_has_std_dev();
    Value_.std_dev_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::StdDevRequest >(GetArenaForAllocation());
  }
  return Value_.std_dev_;
}
inline ::Jde::Markets::Proto::Requests::StdDevRequest* RequestUnion::mutable_std_dev() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.std_dev)
  return _internal_mutable_std_dev();
}

// .Jde.Markets.Proto.Requests.ImpliedVolatilityRequest implied_volatility = 18;
inline bool RequestUnion::_internal_has_implied_volatility() const {
  return Value_case() == kImpliedVolatility;
}
inline bool RequestUnion::has_implied_volatility() const {
  return _internal_has_implied_volatility();
}
inline void RequestUnion::set_has_implied_volatility() {
  _oneof_case_[0] = kImpliedVolatility;
}
inline void RequestUnion::clear_implied_volatility() {
  if (_internal_has_implied_volatility()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.implied_volatility_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* RequestUnion::release_implied_volatility() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.implied_volatility)
  if (_internal_has_implied_volatility()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* temp = Value_.implied_volatility_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.implied_volatility_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest& RequestUnion::_internal_implied_volatility() const {
  return _internal_has_implied_volatility()
      ? *Value_.implied_volatility_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest&>(::Jde::Markets::Proto::Requests::_ImpliedVolatilityRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest& RequestUnion::implied_volatility() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.implied_volatility)
  return _internal_implied_volatility();
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* RequestUnion::unsafe_arena_release_implied_volatility() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.implied_volatility)
  if (_internal_has_implied_volatility()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* temp = Value_.implied_volatility_;
    Value_.implied_volatility_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_implied_volatility(::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* implied_volatility) {
  clear_Value();
  if (implied_volatility) {
    set_has_implied_volatility();
    Value_.implied_volatility_ = implied_volatility;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.implied_volatility)
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* RequestUnion::_internal_mutable_implied_volatility() {
  if (!_internal_has_implied_volatility()) {
    clear_Value();
    set_has_implied_volatility();
    Value_.implied_volatility_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest >(GetArenaForAllocation());
  }
  return Value_.implied_volatility_;
}
inline ::Jde::Markets::Proto::Requests::ImpliedVolatilityRequest* RequestUnion::mutable_implied_volatility() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.implied_volatility)
  return _internal_mutable_implied_volatility();
}

// .Jde.Markets.Proto.Requests.ImpliedPriceRequest implied_price = 19;
inline bool RequestUnion::_internal_has_implied_price() const {
  return Value_case() == kImpliedPrice;
}
inline bool RequestUnion::has_implied_price() const {
  return _internal_has_implied_price();
}
inline void RequestUnion::set_has_implied_price() {
  _oneof_case_[0] = kImpliedPrice;
}
inline void RequestUnion::clear_implied_price() {
  if (_internal_has_implied_price()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.implied_price_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* RequestUnion::release_implied_price() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.implied_price)
  if (_internal_has_implied_price()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* temp = Value_.implied_price_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.implied_price_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::ImpliedPriceRequest& RequestUnion::_internal_implied_price() const {
  return _internal_has_implied_price()
      ? *Value_.implied_price_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::ImpliedPriceRequest&>(::Jde::Markets::Proto::Requests::_ImpliedPriceRequest_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::ImpliedPriceRequest& RequestUnion::implied_price() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.implied_price)
  return _internal_implied_price();
}
inline ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* RequestUnion::unsafe_arena_release_implied_price() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.implied_price)
  if (_internal_has_implied_price()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* temp = Value_.implied_price_;
    Value_.implied_price_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_implied_price(::Jde::Markets::Proto::Requests::ImpliedPriceRequest* implied_price) {
  clear_Value();
  if (implied_price) {
    set_has_implied_price();
    Value_.implied_price_ = implied_price;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.implied_price)
}
inline ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* RequestUnion::_internal_mutable_implied_price() {
  if (!_internal_has_implied_price()) {
    clear_Value();
    set_has_implied_price();
    Value_.implied_price_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::ImpliedPriceRequest >(GetArenaForAllocation());
  }
  return Value_.implied_price_;
}
inline ::Jde::Markets::Proto::Requests::ImpliedPriceRequest* RequestUnion::mutable_implied_price() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.implied_price)
  return _internal_mutable_implied_price();
}

// .Jde.Markets.Proto.Requests.Custom blockly = 20;
inline bool RequestUnion::_internal_has_blockly() const {
  return Value_case() == kBlockly;
}
inline bool RequestUnion::has_blockly() const {
  return _internal_has_blockly();
}
inline void RequestUnion::set_has_blockly() {
  _oneof_case_[0] = kBlockly;
}
inline void RequestUnion::clear_blockly() {
  if (_internal_has_blockly()) {
    if (GetArenaForAllocation() == nullptr) {
      delete Value_.blockly_;
    }
    clear_has_Value();
  }
}
inline ::Jde::Markets::Proto::Requests::Custom* RequestUnion::release_blockly() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.RequestUnion.blockly)
  if (_internal_has_blockly()) {
    clear_has_Value();
      ::Jde::Markets::Proto::Requests::Custom* temp = Value_.blockly_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.blockly_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Jde::Markets::Proto::Requests::Custom& RequestUnion::_internal_blockly() const {
  return _internal_has_blockly()
      ? *Value_.blockly_
      : reinterpret_cast< ::Jde::Markets::Proto::Requests::Custom&>(::Jde::Markets::Proto::Requests::_Custom_default_instance_);
}
inline const ::Jde::Markets::Proto::Requests::Custom& RequestUnion::blockly() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestUnion.blockly)
  return _internal_blockly();
}
inline ::Jde::Markets::Proto::Requests::Custom* RequestUnion::unsafe_arena_release_blockly() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Jde.Markets.Proto.Requests.RequestUnion.blockly)
  if (_internal_has_blockly()) {
    clear_has_Value();
    ::Jde::Markets::Proto::Requests::Custom* temp = Value_.blockly_;
    Value_.blockly_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RequestUnion::unsafe_arena_set_allocated_blockly(::Jde::Markets::Proto::Requests::Custom* blockly) {
  clear_Value();
  if (blockly) {
    set_has_blockly();
    Value_.blockly_ = blockly;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Jde.Markets.Proto.Requests.RequestUnion.blockly)
}
inline ::Jde::Markets::Proto::Requests::Custom* RequestUnion::_internal_mutable_blockly() {
  if (!_internal_has_blockly()) {
    clear_Value();
    set_has_blockly();
    Value_.blockly_ = CreateMaybeMessage< ::Jde::Markets::Proto::Requests::Custom >(GetArenaForAllocation());
  }
  return Value_.blockly_;
}
inline ::Jde::Markets::Proto::Requests::Custom* RequestUnion::mutable_blockly() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestUnion.blockly)
  return _internal_mutable_blockly();
}

inline bool RequestUnion::has_Value() const {
  return Value_case() != VALUE_NOT_SET;
}
inline void RequestUnion::clear_has_Value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline RequestUnion::ValueCase RequestUnion::Value_case() const {
  return RequestUnion::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// NewsArticleRequest

// uint32 id = 1;
inline void NewsArticleRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NewsArticleRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 NewsArticleRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.NewsArticleRequest.id)
  return _internal_id();
}
inline void NewsArticleRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void NewsArticleRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.NewsArticleRequest.id)
}

// string provider_code = 2;
inline void NewsArticleRequest::clear_provider_code() {
  provider_code_.ClearToEmpty();
}
inline const std::string& NewsArticleRequest::provider_code() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.NewsArticleRequest.provider_code)
  return _internal_provider_code();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NewsArticleRequest::set_provider_code(ArgT0&& arg0, ArgT... args) {
 
 provider_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.NewsArticleRequest.provider_code)
}
inline std::string* NewsArticleRequest::mutable_provider_code() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.NewsArticleRequest.provider_code)
  return _internal_mutable_provider_code();
}
inline const std::string& NewsArticleRequest::_internal_provider_code() const {
  return provider_code_.Get();
}
inline void NewsArticleRequest::_internal_set_provider_code(const std::string& value) {
  
  provider_code_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* NewsArticleRequest::_internal_mutable_provider_code() {
  
  return provider_code_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* NewsArticleRequest::release_provider_code() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.NewsArticleRequest.provider_code)
  return provider_code_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void NewsArticleRequest::set_allocated_provider_code(std::string* provider_code) {
  if (provider_code != nullptr) {
    
  } else {
    
  }
  provider_code_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), provider_code,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.NewsArticleRequest.provider_code)
}

// string article_id = 3;
inline void NewsArticleRequest::clear_article_id() {
  article_id_.ClearToEmpty();
}
inline const std::string& NewsArticleRequest::article_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.NewsArticleRequest.article_id)
  return _internal_article_id();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void NewsArticleRequest::set_article_id(ArgT0&& arg0, ArgT... args) {
 
 article_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.NewsArticleRequest.article_id)
}
inline std::string* NewsArticleRequest::mutable_article_id() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.NewsArticleRequest.article_id)
  return _internal_mutable_article_id();
}
inline const std::string& NewsArticleRequest::_internal_article_id() const {
  return article_id_.Get();
}
inline void NewsArticleRequest::_internal_set_article_id(const std::string& value) {
  
  article_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* NewsArticleRequest::_internal_mutable_article_id() {
  
  return article_id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* NewsArticleRequest::release_article_id() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Requests.NewsArticleRequest.article_id)
  return article_id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void NewsArticleRequest::set_allocated_article_id(std::string* article_id) {
  if (article_id != nullptr) {
    
  } else {
    
  }
  article_id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), article_id,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Requests.NewsArticleRequest.article_id)
}

// -------------------------------------------------------------------

// HistoricalNewsRequest

// uint32 id = 1;
inline void HistoricalNewsRequest::clear_id() {
  id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.id)
  return _internal_id();
}
inline void HistoricalNewsRequest::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  id_ = value;
}
inline void HistoricalNewsRequest::set_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.id)
}

// uint32 contract_id = 2;
inline void HistoricalNewsRequest::clear_contract_id() {
  contract_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.contract_id)
  return _internal_contract_id();
}
inline void HistoricalNewsRequest::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  contract_id_ = value;
}
inline void HistoricalNewsRequest::set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.contract_id)
}

// repeated string provider_codes = 3;
inline int HistoricalNewsRequest::_internal_provider_codes_size() const {
  return provider_codes_.size();
}
inline int HistoricalNewsRequest::provider_codes_size() const {
  return _internal_provider_codes_size();
}
inline void HistoricalNewsRequest::clear_provider_codes() {
  provider_codes_.Clear();
}
inline std::string* HistoricalNewsRequest::add_provider_codes() {
  // @@protoc_insertion_point(field_add_mutable:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  return _internal_add_provider_codes();
}
inline const std::string& HistoricalNewsRequest::_internal_provider_codes(int index) const {
  return provider_codes_.Get(index);
}
inline const std::string& HistoricalNewsRequest::provider_codes(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  return _internal_provider_codes(index);
}
inline std::string* HistoricalNewsRequest::mutable_provider_codes(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  return provider_codes_.Mutable(index);
}
inline void HistoricalNewsRequest::set_provider_codes(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  provider_codes_.Mutable(index)->assign(value);
}
inline void HistoricalNewsRequest::set_provider_codes(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  provider_codes_.Mutable(index)->assign(std::move(value));
}
inline void HistoricalNewsRequest::set_provider_codes(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  provider_codes_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline void HistoricalNewsRequest::set_provider_codes(int index, const char* value, size_t size) {
  provider_codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline std::string* HistoricalNewsRequest::_internal_add_provider_codes() {
  return provider_codes_.Add();
}
inline void HistoricalNewsRequest::add_provider_codes(const std::string& value) {
  provider_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline void HistoricalNewsRequest::add_provider_codes(std::string&& value) {
  provider_codes_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline void HistoricalNewsRequest::add_provider_codes(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  provider_codes_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline void HistoricalNewsRequest::add_provider_codes(const char* value, size_t size) {
  provider_codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
HistoricalNewsRequest::provider_codes() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  return provider_codes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
HistoricalNewsRequest::mutable_provider_codes() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.HistoricalNewsRequest.provider_codes)
  return &provider_codes_;
}

// uint32 total_results = 4;
inline void HistoricalNewsRequest::clear_total_results() {
  total_results_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::_internal_total_results() const {
  return total_results_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::total_results() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.total_results)
  return _internal_total_results();
}
inline void HistoricalNewsRequest::_internal_set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_results_ = value;
}
inline void HistoricalNewsRequest::set_total_results(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_results(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.total_results)
}

// uint32 start = 5;
inline void HistoricalNewsRequest::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::start() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.start)
  return _internal_start();
}
inline void HistoricalNewsRequest::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void HistoricalNewsRequest::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.start)
}

// uint32 end = 6;
inline void HistoricalNewsRequest::clear_end() {
  end_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::_internal_end() const {
  return end_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 HistoricalNewsRequest::end() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.HistoricalNewsRequest.end)
  return _internal_end();
}
inline void HistoricalNewsRequest::_internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  end_ = value;
}
inline void HistoricalNewsRequest::set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Requests.HistoricalNewsRequest.end)
}

// -------------------------------------------------------------------

// RequestTransmission

// repeated .Jde.Markets.Proto.Requests.RequestUnion messages = 1;
inline int RequestTransmission::_internal_messages_size() const {
  return messages_.size();
}
inline int RequestTransmission::messages_size() const {
  return _internal_messages_size();
}
inline void RequestTransmission::clear_messages() {
  messages_.Clear();
}
inline ::Jde::Markets::Proto::Requests::RequestUnion* RequestTransmission::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Requests.RequestTransmission.messages)
  return messages_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::RequestUnion >*
RequestTransmission::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Requests.RequestTransmission.messages)
  return &messages_;
}
inline const ::Jde::Markets::Proto::Requests::RequestUnion& RequestTransmission::_internal_messages(int index) const {
  return messages_.Get(index);
}
inline const ::Jde::Markets::Proto::Requests::RequestUnion& RequestTransmission::messages(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Requests.RequestTransmission.messages)
  return _internal_messages(index);
}
inline ::Jde::Markets::Proto::Requests::RequestUnion* RequestTransmission::_internal_add_messages() {
  return messages_.Add();
}
inline ::Jde::Markets::Proto::Requests::RequestUnion* RequestTransmission::add_messages() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Requests.RequestTransmission.messages)
  return _internal_add_messages();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Requests::RequestUnion >&
RequestTransmission::messages() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Requests.RequestTransmission.messages)
  return messages_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Requests
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Jde::Markets::Proto::Requests::ETickList> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Markets::Proto::Requests::ETickList>() {
  return ::Jde::Markets::Proto::Requests::ETickList_descriptor();
}
template <> struct is_proto_enum< ::Jde::Markets::Proto::Requests::Display> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Markets::Proto::Requests::Display>() {
  return ::Jde::Markets::Proto::Requests::Display_descriptor();
}
template <> struct is_proto_enum< ::Jde::Markets::Proto::Requests::BarSize> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Markets::Proto::Requests::BarSize>() {
  return ::Jde::Markets::Proto::Requests::BarSize_descriptor();
}
template <> struct is_proto_enum< ::Jde::Markets::Proto::Requests::ERequests> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Jde::Markets::Proto::Requests::ERequests>() {
  return ::Jde::Markets::Proto::Requests::ERequests_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_requests_2eproto
