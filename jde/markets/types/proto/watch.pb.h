// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: watch.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_watch_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_watch_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ib.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_watch_2eproto JDE_MARKETS_EXPORT
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct JDE_MARKETS_EXPORT TableStruct_watch_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern JDE_MARKETS_EXPORT const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_watch_2eproto;
namespace Jde {
namespace Markets {
namespace Proto {
namespace Watch {
class CashEntry;
struct CashEntryDefaultTypeInternal;
JDE_MARKETS_EXPORT extern CashEntryDefaultTypeInternal _CashEntry_default_instance_;
class Entry;
struct EntryDefaultTypeInternal;
JDE_MARKETS_EXPORT extern EntryDefaultTypeInternal _Entry_default_instance_;
class File;
struct FileDefaultTypeInternal;
JDE_MARKETS_EXPORT extern FileDefaultTypeInternal _File_default_instance_;
}  // namespace Watch
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde
PROTOBUF_NAMESPACE_OPEN
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Watch::CashEntry* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Watch::CashEntry>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Watch::Entry* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Watch::Entry>(Arena*);
template<> JDE_MARKETS_EXPORT ::Jde::Markets::Proto::Watch::File* Arena::CreateMaybeMessage<::Jde::Markets::Proto::Watch::File>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Jde {
namespace Markets {
namespace Proto {
namespace Watch {

// ===================================================================

class JDE_MARKETS_EXPORT Entry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Watch.Entry) */ {
 public:
  inline Entry() : Entry(nullptr) {}
  ~Entry() override;
  explicit constexpr Entry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Entry(const Entry& from);
  Entry(Entry&& from) noexcept
    : Entry() {
    *this = ::std::move(from);
  }

  inline Entry& operator=(const Entry& from) {
    CopyFrom(from);
    return *this;
  }
  inline Entry& operator=(Entry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Entry& default_instance() {
    return *internal_default_instance();
  }
  static inline const Entry* internal_default_instance() {
    return reinterpret_cast<const Entry*>(
               &_Entry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Entry& a, Entry& b) {
    a.Swap(&b);
  }
  inline void Swap(Entry* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Entry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Entry* New() const final {
    return new Entry();
  }

  Entry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Entry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Entry& from);
  void MergeFrom(const Entry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Entry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Watch.Entry";
  }
  protected:
  explicit Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSharesFieldNumber = 2,
    kContractIdFieldNumber = 1,
  };
  // double shares = 2;
  void clear_shares();
  double shares() const;
  void set_shares(double value);
  private:
  double _internal_shares() const;
  void _internal_set_shares(double value);
  public:

  // uint32 contract_id = 1;
  void clear_contract_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id() const;
  void set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_contract_id() const;
  void _internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Watch.Entry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double shares_;
  ::PROTOBUF_NAMESPACE_ID::uint32 contract_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_watch_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT CashEntry final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Watch.CashEntry) */ {
 public:
  inline CashEntry() : CashEntry(nullptr) {}
  ~CashEntry() override;
  explicit constexpr CashEntry(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CashEntry(const CashEntry& from);
  CashEntry(CashEntry&& from) noexcept
    : CashEntry() {
    *this = ::std::move(from);
  }

  inline CashEntry& operator=(const CashEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline CashEntry& operator=(CashEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CashEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const CashEntry* internal_default_instance() {
    return reinterpret_cast<const CashEntry*>(
               &_CashEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CashEntry& a, CashEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(CashEntry* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CashEntry* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CashEntry* New() const final {
    return new CashEntry();
  }

  CashEntry* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CashEntry>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CashEntry& from);
  void MergeFrom(const CashEntry& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CashEntry* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Watch.CashEntry";
  }
  protected:
  explicit CashEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAmountFieldNumber = 2,
    kCurrencyFieldNumber = 1,
  };
  // double amount = 2;
  void clear_amount();
  double amount() const;
  void set_amount(double value);
  private:
  double _internal_amount() const;
  void _internal_set_amount(double value);
  public:

  // .Jde.Markets.Proto.Currencies currency = 1;
  void clear_currency();
  ::Jde::Markets::Proto::Currencies currency() const;
  void set_currency(::Jde::Markets::Proto::Currencies value);
  private:
  ::Jde::Markets::Proto::Currencies _internal_currency() const;
  void _internal_set_currency(::Jde::Markets::Proto::Currencies value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Watch.CashEntry)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  double amount_;
  int currency_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_watch_2eproto;
};
// -------------------------------------------------------------------

class JDE_MARKETS_EXPORT File final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Jde.Markets.Proto.Watch.File) */ {
 public:
  inline File() : File(nullptr) {}
  ~File() override;
  explicit constexpr File(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  File(const File& from);
  File(File&& from) noexcept
    : File() {
    *this = ::std::move(from);
  }

  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  inline File& operator=(File&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const File& default_instance() {
    return *internal_default_instance();
  }
  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
               &_File_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(File& a, File& b) {
    a.Swap(&b);
  }
  inline void Swap(File* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(File* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline File* New() const final {
    return new File();
  }

  File* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<File>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const File& from);
  void MergeFrom(const File& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(File* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Jde.Markets.Proto.Watch.File";
  }
  protected:
  explicit File(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecuritiesFieldNumber = 3,
    kCurrenciesFieldNumber = 4,
    kNameFieldNumber = 1,
    kIsPortfolioFieldNumber = 2,
  };
  // repeated .Jde.Markets.Proto.Watch.Entry securities = 3;
  int securities_size() const;
  private:
  int _internal_securities_size() const;
  public:
  void clear_securities();
  ::Jde::Markets::Proto::Watch::Entry* mutable_securities(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::Entry >*
      mutable_securities();
  private:
  const ::Jde::Markets::Proto::Watch::Entry& _internal_securities(int index) const;
  ::Jde::Markets::Proto::Watch::Entry* _internal_add_securities();
  public:
  const ::Jde::Markets::Proto::Watch::Entry& securities(int index) const;
  ::Jde::Markets::Proto::Watch::Entry* add_securities();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::Entry >&
      securities() const;

  // repeated .Jde.Markets.Proto.Watch.CashEntry currencies = 4;
  int currencies_size() const;
  private:
  int _internal_currencies_size() const;
  public:
  void clear_currencies();
  ::Jde::Markets::Proto::Watch::CashEntry* mutable_currencies(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::CashEntry >*
      mutable_currencies();
  private:
  const ::Jde::Markets::Proto::Watch::CashEntry& _internal_currencies(int index) const;
  ::Jde::Markets::Proto::Watch::CashEntry* _internal_add_currencies();
  public:
  const ::Jde::Markets::Proto::Watch::CashEntry& currencies(int index) const;
  ::Jde::Markets::Proto::Watch::CashEntry* add_currencies();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::CashEntry >&
      currencies() const;

  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_FUTURE_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // bool is_portfolio = 2;
  void clear_is_portfolio();
  bool is_portfolio() const;
  void set_is_portfolio(bool value);
  private:
  bool _internal_is_portfolio() const;
  void _internal_set_is_portfolio(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Jde.Markets.Proto.Watch.File)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::Entry > securities_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::CashEntry > currencies_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool is_portfolio_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_watch_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Entry

// uint32 contract_id = 1;
inline void Entry::clear_contract_id() {
  contract_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Entry::_internal_contract_id() const {
  return contract_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Entry::contract_id() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.Entry.contract_id)
  return _internal_contract_id();
}
inline void Entry::_internal_set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  contract_id_ = value;
}
inline void Entry::set_contract_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_contract_id(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.Entry.contract_id)
}

// double shares = 2;
inline void Entry::clear_shares() {
  shares_ = 0;
}
inline double Entry::_internal_shares() const {
  return shares_;
}
inline double Entry::shares() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.Entry.shares)
  return _internal_shares();
}
inline void Entry::_internal_set_shares(double value) {
  
  shares_ = value;
}
inline void Entry::set_shares(double value) {
  _internal_set_shares(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.Entry.shares)
}

// -------------------------------------------------------------------

// CashEntry

// .Jde.Markets.Proto.Currencies currency = 1;
inline void CashEntry::clear_currency() {
  currency_ = 0;
}
inline ::Jde::Markets::Proto::Currencies CashEntry::_internal_currency() const {
  return static_cast< ::Jde::Markets::Proto::Currencies >(currency_);
}
inline ::Jde::Markets::Proto::Currencies CashEntry::currency() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.CashEntry.currency)
  return _internal_currency();
}
inline void CashEntry::_internal_set_currency(::Jde::Markets::Proto::Currencies value) {
  
  currency_ = value;
}
inline void CashEntry::set_currency(::Jde::Markets::Proto::Currencies value) {
  _internal_set_currency(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.CashEntry.currency)
}

// double amount = 2;
inline void CashEntry::clear_amount() {
  amount_ = 0;
}
inline double CashEntry::_internal_amount() const {
  return amount_;
}
inline double CashEntry::amount() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.CashEntry.amount)
  return _internal_amount();
}
inline void CashEntry::_internal_set_amount(double value) {
  
  amount_ = value;
}
inline void CashEntry::set_amount(double value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.CashEntry.amount)
}

// -------------------------------------------------------------------

// File

// string name = 1;
inline void File::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& File::name() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.File.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void File::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.File.name)
}
inline std::string* File::mutable_name() {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Watch.File.name)
  return _internal_mutable_name();
}
inline const std::string& File::_internal_name() const {
  return name_.Get();
}
inline void File::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* File::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* File::release_name() {
  // @@protoc_insertion_point(field_release:Jde.Markets.Proto.Watch.File.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void File::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:Jde.Markets.Proto.Watch.File.name)
}

// bool is_portfolio = 2;
inline void File::clear_is_portfolio() {
  is_portfolio_ = false;
}
inline bool File::_internal_is_portfolio() const {
  return is_portfolio_;
}
inline bool File::is_portfolio() const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.File.is_portfolio)
  return _internal_is_portfolio();
}
inline void File::_internal_set_is_portfolio(bool value) {
  
  is_portfolio_ = value;
}
inline void File::set_is_portfolio(bool value) {
  _internal_set_is_portfolio(value);
  // @@protoc_insertion_point(field_set:Jde.Markets.Proto.Watch.File.is_portfolio)
}

// repeated .Jde.Markets.Proto.Watch.Entry securities = 3;
inline int File::_internal_securities_size() const {
  return securities_.size();
}
inline int File::securities_size() const {
  return _internal_securities_size();
}
inline void File::clear_securities() {
  securities_.Clear();
}
inline ::Jde::Markets::Proto::Watch::Entry* File::mutable_securities(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Watch.File.securities)
  return securities_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::Entry >*
File::mutable_securities() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Watch.File.securities)
  return &securities_;
}
inline const ::Jde::Markets::Proto::Watch::Entry& File::_internal_securities(int index) const {
  return securities_.Get(index);
}
inline const ::Jde::Markets::Proto::Watch::Entry& File::securities(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.File.securities)
  return _internal_securities(index);
}
inline ::Jde::Markets::Proto::Watch::Entry* File::_internal_add_securities() {
  return securities_.Add();
}
inline ::Jde::Markets::Proto::Watch::Entry* File::add_securities() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Watch.File.securities)
  return _internal_add_securities();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::Entry >&
File::securities() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Watch.File.securities)
  return securities_;
}

// repeated .Jde.Markets.Proto.Watch.CashEntry currencies = 4;
inline int File::_internal_currencies_size() const {
  return currencies_.size();
}
inline int File::currencies_size() const {
  return _internal_currencies_size();
}
inline void File::clear_currencies() {
  currencies_.Clear();
}
inline ::Jde::Markets::Proto::Watch::CashEntry* File::mutable_currencies(int index) {
  // @@protoc_insertion_point(field_mutable:Jde.Markets.Proto.Watch.File.currencies)
  return currencies_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::CashEntry >*
File::mutable_currencies() {
  // @@protoc_insertion_point(field_mutable_list:Jde.Markets.Proto.Watch.File.currencies)
  return &currencies_;
}
inline const ::Jde::Markets::Proto::Watch::CashEntry& File::_internal_currencies(int index) const {
  return currencies_.Get(index);
}
inline const ::Jde::Markets::Proto::Watch::CashEntry& File::currencies(int index) const {
  // @@protoc_insertion_point(field_get:Jde.Markets.Proto.Watch.File.currencies)
  return _internal_currencies(index);
}
inline ::Jde::Markets::Proto::Watch::CashEntry* File::_internal_add_currencies() {
  return currencies_.Add();
}
inline ::Jde::Markets::Proto::Watch::CashEntry* File::add_currencies() {
  // @@protoc_insertion_point(field_add:Jde.Markets.Proto.Watch.File.currencies)
  return _internal_add_currencies();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Jde::Markets::Proto::Watch::CashEntry >&
File::currencies() const {
  // @@protoc_insertion_point(field_list:Jde.Markets.Proto.Watch.File.currencies)
  return currencies_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Watch
}  // namespace Proto
}  // namespace Markets
}  // namespace Jde

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_watch_2eproto
